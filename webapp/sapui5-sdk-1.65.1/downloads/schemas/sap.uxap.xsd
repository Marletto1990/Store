<?xml version="1.0" encoding="UTF-8"?><xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="sap.uxap" xmlns:n1="sap.ui.unified" xmlns:n2="sap.m" xmlns:n0="sap.ui.core" xmlns:n3="sap.ui.layout" xmlns:n4="sap.uxap">
<xsd:import namespace="sap.ui.unified"/>
<xsd:import namespace="sap.m"/>
<xsd:import namespace="sap.ui.core"/>
<xsd:import namespace="sap.ui.layout"/>
<xsd:element name="AnchorBar" type="n4:_AnchorBarType" substitutionGroup="n2:Toolbar">
<xsd:annotation>
<xsd:documentation>Displays the titles of the sections and subsections in the {@link sap.uxap.ObjectPageLayout ObjectPageLayout}
and allows the user to scroll to the respective content.

&lt;h3&gt;Overview&lt;/h3&gt;

The &lt;code&gt;AnchorBar&lt;/code&gt; is internally generated as a menu in the &lt;code&gt;ObjectPageLayout&lt;/code&gt;.
It displays the sections and subsections and allows the user to directly scroll to the respective
content by selecting them, while it remains visible at the top of the page (below the page header).</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="BlockBase" type="n4:_BlockBaseType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>The main element that holds the content that is displayed in an
{@link sap.uxap.ObjectPageLayout ObjectPageLayout}, but not necessarily only there.

&lt;h3&gt;Overview&lt;/h3&gt;

The blocks give the flexibility to combine different content types.

A block is a control that:
&lt;ul&gt;
&lt;li&gt;Has modes and a view associated to each mode. At rendering time, the view associated to the mode is rendered.&lt;/li&gt;
&lt;li&gt;Can use all view types for storing its internal control tree (XML, JS, JSON, HTML)&lt;/li&gt;
&lt;/ul&gt;

As any UI5 view, the XML view can have a controller which automatically comes with a
&lt;code&gt;this.oParentBlock&lt;/code&gt; attribute (so that the controller can interact with the block).
If the controller implements the &lt;code&gt;onParentBlockModeChange&lt;/code&gt; method, this method will
be called with the &lt;code&gt;sMode&lt;/code&gt; parameter when the view is used or reused by the block.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="BreadCrumbs" type="n4:_BreadCrumbsType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Represents the navigation steps up to the current location in the app.

&lt;h3&gt;Overview&lt;/h3&gt;

The &lt;code&gt;BreadCrumbs&lt;/code&gt; control allows the users to quickly navigate to a previous
location on the path that got them to the current location by choosing the displayed
navigation steps.

It has two main modes of operation:
&lt;ul&gt;
&lt;li&gt;A trail of links followed by separators, when there's enough space for the control to fit on one line.&lt;/li&gt;
&lt;li&gt;A dropdown list with the links, when the trail of links wouldn't fit on one line.&lt;/li&gt;
&lt;/ul&gt;</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="HierarchicalSelect" type="n4:_HierarchicalSelectType" substitutionGroup="n2:Select">
<xsd:annotation>
<xsd:documentation>A select that displays items on a hierarchy of 2 levels.

If a provided item has a custom data named &lt;code&gt;secondLevel&lt;/code&gt;, then it will be displayed as a second level,
otherwise it would be displayed as a first level.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ModelMapping" type="n4:_ModelMappingType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>Defines the entity that will be passed to the {@link sap.uxap.ObjectPageLayout}.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ObjectPageAccessibleLandmarkInfo" type="n4:_ObjectPageAccessibleLandmarkInfoType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>Settings for accessible landmarks which can be applied to the container elements of a &lt;code&gt;sap.uxap.ObjectPageLayout&lt;/code&gt; control.
These landmarks are used by assistive technologies (such as screenreaders) to provide a meaningful page overview.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ObjectPageDynamicHeaderContent" type="n4:_ObjectPageDynamicHeaderContentType" substitutionGroup=":DynamicPageHeader">
<xsd:annotation>
<xsd:documentation>Header content for the dynamic header of the {@link sap.uxap.ObjectPageLayout}.

&lt;h3&gt;Overview&lt;/h3&gt;

The &lt;code&gt;ObjectPageDynamicHeaderContent&lt;/code&gt; represents the movable part of
the &lt;code&gt;ObjectPageLayout&lt;/code&gt;'s dynamic header. It can contain any control and
scrolls along with the content of the page until it disappears (collapsed header).
When scrolled back to the top it becomes visible again (expanded header).
It contains all the additional information of the object.

Documentation links:
&lt;ul&gt;
&lt;li&gt;{@link topic:d2ef0099542d44dc868719d908e576d0 Object Page Headers}&lt;/li&gt;
&lt;li&gt;{@link topic:6e340c119ddd4c778b315f65a0432420 Object Page Dynamic Header}&lt;/li&gt;
&lt;/ul&gt;</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ObjectPageDynamicHeaderTitle" type="n4:_ObjectPageDynamicHeaderTitleType" substitutionGroup=":DynamicPageTitle">
<xsd:annotation>
<xsd:documentation>Represents the static part (header title) of the dynamic header of the {@link sap.uxap.ObjectPageLayout}.

&lt;h3&gt;Overview&lt;/h3&gt;

The &lt;code&gt;ObjectPageDynamicHeaderTitle&lt;/code&gt; is used to represent the most important details of
the displayed business object, such as the object title and actions that the user can perform.

&lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;ObjectPageDynamicHeaderTitle&lt;/code&gt; is meant to be used inside the &lt;code&gt;ObjectPageLayout&lt;/code&gt;
control. Any other usage is not supported and can lead to unexpected behavior.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ObjectPageHeader" type="n4:_ObjectPageHeaderType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Represents the static part (header title) of the classic header of the {@link sap.uxap.ObjectPageLayout}.

&lt;h3&gt;Overview&lt;/h3&gt;

The &lt;code&gt;ObjectPageHeader&lt;/code&gt; is used to display the basic information about a business object,
such as title/description/picture, as well as a list of common actions.

&lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;ObjectPageHeader&lt;/code&gt; is meant to be used inside the &lt;code&gt;ObjectPageLayout&lt;/code&gt;
control. Any other usage is not supported and can lead to unexpected behavior.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ObjectPageHeaderActionButton" type="n4:_ObjectPageHeaderActionButtonType" substitutionGroup="n2:Button">
<xsd:annotation>
<xsd:documentation>A Button that is used in the &lt;code&gt;actions&lt;/code&gt; aggregation of the {@link sap.uxap.ObjectPageHeader}.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ObjectPageHeaderContent" type="n4:_ObjectPageHeaderContentType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Header content for the classic header of the {@link sap.uxap.ObjectPageLayout}.

&lt;h3&gt;Overview&lt;/h3&gt;

The &lt;code&gt;ObjectPageHeaderContent&lt;/code&gt; represents the movable part of the
&lt;code&gt;ObjectPageLayout&lt;/code&gt;'s classic header. It can contain any control and scrolls along with
the content of the page until it disappears (collapsed header). When scrolled back to the
top it becomes visible again (expanded header). It contains all the additional information of the object.

Documentation links:
&lt;ul&gt;
&lt;li&gt;{@link topic:d2ef0099542d44dc868719d908e576d0 Object Page Headers}&lt;/li&gt;
&lt;li&gt;{@link topic:0fecbce45e39406aa939bd25e89823f4 Object Page Classic Header}&lt;/li&gt;
&lt;li&gt;{@link https://experience.sap.com/fiori-design-web/object-page/ UX Guidelines: Object Page}&lt;/li&gt;
&lt;/ul&gt;</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ObjectPageHeaderLayoutData" type="n4:_ObjectPageHeaderLayoutDataType" substitutionGroup="n0:LayoutData">
<xsd:annotation>
<xsd:documentation>A {@link sap.ui.core.LayoutData} element that can be added to controls used in the
&lt;code&gt;headerContent&lt;/code&gt; aggregation of the &lt;code&gt;ObjectPageLayout&lt;/code&gt;.

&lt;b&gt;Note:&lt;/b&gt; This element is only taken into account when the &lt;code&gt;sap.uxap.ObjectPageLayout&lt;/code&gt; control is used together with
&lt;code&gt;sap.uxap.ObjectPageHeader&lt;/code&gt; as value of &lt;code&gt;headerTitle&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ObjectPageLayout" type="n4:_ObjectPageLayoutType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>A layout that allows apps to easily display information related to a business object.

&lt;h3&gt;Overview&lt;/h3&gt;

The &lt;code&gt;ObjectPageLayout&lt;/code&gt; layout is composed of a header (title and content),
an optional anchor bar and block content wrapped in sections and subsections that
structure the information.

&lt;h3&gt;Structure&lt;/h3&gt;

An &lt;code&gt;ObjectPageLayout&lt;/code&gt; control is used to put together all parts of an Object page
- Header, optional Anchor Bar and Sections/Subsections.

&lt;h4&gt;Header&lt;/h4&gt;
The &lt;code&gt;ObjectPageLayout&lt;/code&gt; implements the snapping header concept. This means that
the upper part of the header (Header Title) always stays visible, while the lower part
(Header Content) can scroll out of view.

Header Title is displayed at the top of the header and always remains visible above the
scrollable content of the page. It contains the title and most prominent details of the object.

The Header Content scrolls along with the content of the page until it disappears (collapsed header).
When scrolled back to the top it becomes visible again (expanded header). It contains all the
additional information of the object.

&lt;h4&gt;Anchor Bar&lt;/h4&gt;
The Anchor Bar is an automatically generated internal menu that shows the titles of the sections
and subsections and allows the user to scroll to the respective section and subsection content.

&lt;h4&gt;Sections, Subsections, Blocks&lt;/h4&gt;
The content of the page that appears bellow the header is composed of blocks structured into
sections and subsections.

&lt;h3&gt;Usage&lt;/h3&gt;
Use the &lt;code&gt;ObjectPageLayout&lt;/code&gt; if:
&lt;ul&gt;
&lt;li&gt;The users need to see, edit, or create an item with all its details.&lt;/li&gt;
&lt;li&gt;Users need to get an overview of an object and interact with different parts of the object.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Responsive behavior&lt;/h3&gt;

The &lt;code&gt;ObjectPageLayout&lt;/code&gt; is responsive and adapts to all screen sizes.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ObjectPageLazyLoader" type="n4:_ObjectPageLazyLoaderType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>A helper element that enables a "stashed-based" lazy loading approach for the content of
the {@link sap.uxap.ObjectPageSubSection} control.

&lt;code&gt;ObjectPageLazyLoader&lt;/code&gt; is intended to be used in a declarative way only
(for example, in a view) with the &lt;code&gt;stashed&lt;/code&gt; property set to &lt;code&gt;true&lt;/code&gt;,
and is recommended to be used only once per subsection as its sole content.

&lt;code&gt;ObjectPageLazyLoader&lt;/code&gt; utilizes UI5's stashing mechanism and is a lightweight
alternative to the native block-based Lazy Loading of the &lt;code&gt;ObjectPageLayout&lt;/code&gt;.
Wrapping the content of a subsection in an &lt;code&gt;ObjectPageLazyLoader&lt;/code&gt; with
&lt;code&gt;stashed=true&lt;/code&gt; will make the content unstash automatically as the user scrolls.

&lt;b&gt;Note:&lt;/b&gt; Subsections are required to have an ID when used with &lt;code&gt;ObjectPageLazyLoader&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ObjectPageSection" type="n4:_ObjectPageSectionType" substitutionGroup="n4:ObjectPageSectionBase">
<xsd:annotation>
<xsd:documentation>Top-level information container of an {@link sap.uxap.ObjectPageLayout}.

The &lt;code&gt;ObjectPageSection&lt;/code&gt;'s purpose is to aggregate subsections.

&lt;b&gt;Note:&lt;/b&gt; This control is intended to be used only as part of the &lt;code&gt;ObjectPageLayout&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ObjectPageSectionBase" type="n4:_ObjectPageSectionBaseType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>An abstract container for sections and subsections in the {@link sap.uxap.ObjectPageLayout}.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ObjectPageSubSection" type="n4:_ObjectPageSubSectionType" substitutionGroup="n4:ObjectPageSectionBase">
<xsd:annotation>
<xsd:documentation>Second-level information container of an {@link sap.uxap.ObjectPageLayout}.

An &lt;code&gt;ObjectPageSubSection&lt;/code&gt; may only be used within sections in the
&lt;code&gt;ObjectPageLayout&lt;/code&gt;. Subsections are used to display primary information in
the &lt;code&gt;blocks&lt;/code&gt; aggregation (always visible) and not-so-important information in
the &lt;code&gt;moreBlocks&lt;/code&gt; aggregation. The content in the &lt;code&gt;moreBlocks&lt;/code&gt;
aggregation is initially hidden, but may be accessed with a "See more" (...) button.

&lt;b&gt;Note:&lt;/b&gt; This control is intended to be used only as part of the &lt;code&gt;ObjectPageLayout&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<!--type definition for UIElement 'sap.uxap.AnchorBar'-->
<xsd:complexType name="_AnchorBarType">
<xsd:complexContent>
<xsd:extension base="n2:_ToolbarType">
<xsd:sequence/>
<xsd:attribute name="showPopover" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="upperCase" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the Anchor bar items are displayed in upper case.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="backgroundDesign" type="n2:_BackgroundDesignType">
<xsd:annotation>
<xsd:documentation>Determines the background color of the &lt;code&gt;AnchorBar&lt;/code&gt;.

&lt;b&gt;Note:&lt;/b&gt; The default value of &lt;code&gt;backgroundDesign&lt;/code&gt; property is null.
If the property is not set, the color of the background is &lt;code&gt;@sapUiObjectHeaderBackground&lt;/code&gt;,
which depends on the specific theme.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="selectedButton" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The button that represents the Section being scrolled by the user.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.uxap.BlockBase'-->
<xsd:complexType name="_BlockBaseType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'mappings'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n4:ModelMapping"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="mappings" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Map external UI5 model and internal Block model</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n4:ModelMapping"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="mode" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Determines the mode of the block.
When block is used inside ObjectPage this mode is inherited my the SubSection.
The mode of the block is changed when SubSection mode changes.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="columnLayout" type="n4:_BlockBaseColumnLayoutType">
<xsd:annotation>
<xsd:documentation>Determines on how many columns the layout will be rendered.
Allowed values are integers from 1 to 4 and "auto".</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="formAdjustment" type="n4:_BlockBaseFormAdjustmentType">
<xsd:annotation>
<xsd:documentation>Determines if the block should automatically adjust its inner forms.
Allowed values are "BlockColumns" and "OneColumn" and "None".
If the value is "BlockColumns", then the inner form will have as many columns as the colspan of its parent block.
If the value is "OneColumn", the inner form will have exactly one column, regardless the colspan of its parent block.
If the value is "None", no automatic adjustment of inner forms will be made and the form will keep its original column count.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showSubSectionMore" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the show more button should be shown.

&lt;b&gt;Note:&lt;/b&gt; The property will take effect if the &lt;code&gt;BlockBase&lt;/code&gt; is inside &lt;code&gt;ObjectPageSubSection&lt;/code&gt;
and would be ignored in case the &lt;code&gt;BlockBase&lt;/code&gt; is nested inside another &lt;code&gt;BlockBase&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="selectedView" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The view that is rendered now.
Can be used as getter for the rendered view.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.uxap.BreadCrumbs'-->
<xsd:complexType name="_BreadCrumbsType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'links'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n2:Link"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="links" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A list of all the active link elements in the BreadCrumbs control.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n2:Link"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="currentLocation" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The current/last element in the BreadCrumbs path.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n2:Text"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="showCurrentLocation" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Sets the visibility of the current/last element in the BreadCrumbs path.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.uxap.HierarchicalSelect'-->
<xsd:complexType name="_HierarchicalSelectType">
<xsd:complexContent>
<xsd:extension base="n2:_SelectType">
<xsd:attribute name="upperCase" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the HierarchicalSelect items are displayed in upper case.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.uxap.ModelMapping'-->
<xsd:complexType name="_ModelMappingType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="externalModelName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Determines the external model name.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="internalModelName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Determines the internal model name.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="externalPath" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Determines the external path.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.uxap.ObjectPageAccessibleLandmarkInfo'-->
<xsd:complexType name="_ObjectPageAccessibleLandmarkInfoType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="rootRole" type="n0:_AccessibleLandmarkRoleType">
<xsd:annotation>
<xsd:documentation>Landmark role of the root container of the corresponding &lt;code&gt;sap.uxap.ObjectPageLayout&lt;/code&gt; control.

If set to &lt;code&gt;sap.ui.core.AccessibleLandmarkRole.None&lt;/code&gt;, no landmark will be added to the container.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="rootLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Texts which describe the landmark of the root container of the corresponding &lt;code&gt;sap.uxap.ObjectPageLayout&lt;/code&gt; control.

If not set (and a landmark different than &lt;code&gt;sap.ui.core.AccessibleLandmarkRole.None&lt;/code&gt; is defined), no label is set.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="contentRole" type="n0:_AccessibleLandmarkRoleType">
<xsd:annotation>
<xsd:documentation>Landmark role of the content container of the corresponding &lt;code&gt;sap.uxap.ObjectPageLayout&lt;/code&gt; control.

If set to &lt;code&gt;sap.ui.core.AccessibleLandmarkRole.None&lt;/code&gt;, no landmark will be added to the container.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="contentLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Texts which describe the landmark of the content container of the corresponding &lt;code&gt;sap.uxap.ObjectPageLayout&lt;/code&gt; control.

If not set (and a landmark different than &lt;code&gt;sap.ui.core.AccessibleLandmarkRole.None&lt;/code&gt; is defined), no label is set.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="navigationRole" type="n0:_AccessibleLandmarkRoleType">
<xsd:annotation>
<xsd:documentation>Landmark role of the navigation container of the corresponding &lt;code&gt;sap.uxap.ObjectPageLayout&lt;/code&gt; control.

If set to &lt;code&gt;sap.ui.core.AccessibleLandmarkRole.None&lt;/code&gt;, no landmark will be added to the container.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="navigationLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Texts which describe the landmark of the navigation container of the corresponding &lt;code&gt;sap.uxap.ObjectPageLayout&lt;/code&gt; control.

If not set (and a landmark different than &lt;code&gt;sap.ui.core.AccessibleLandmarkRole.None&lt;/code&gt; is defined), no label is set.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="headerRole" type="n0:_AccessibleLandmarkRoleType">
<xsd:annotation>
<xsd:documentation>Landmark role of the header container of the corresponding &lt;code&gt;sap.uxap.ObjectPageLayout&lt;/code&gt; control.

If set to &lt;code&gt;sap.ui.core.AccessibleLandmarkRole.None&lt;/code&gt;, no landmark will be added to the container.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="headerLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Texts which describe the landmark of the header container of the corresponding &lt;code&gt;sap.uxap.ObjectPageLayout&lt;/code&gt; control.

If not set (and a landmark different than &lt;code&gt;sap.ui.core.AccessibleLandmarkRole.None&lt;/code&gt; is defined), no label is set.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="footerRole" type="n0:_AccessibleLandmarkRoleType">
<xsd:annotation>
<xsd:documentation>Landmark role of the footer container of the corresponding &lt;code&gt;sap.uxap.ObjectPageLayout&lt;/code&gt; control.

If set to &lt;code&gt;sap.ui.core.AccessibleLandmarkRole.None&lt;/code&gt;, no landmark will be added to the container.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="footerLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Texts which describe the landmark of the header container of the corresponding &lt;code&gt;sap.uxap.ObjectPageLayout&lt;/code&gt; control.

If not set (and a landmark different than &lt;code&gt;sap.ui.core.AccessibleLandmarkRole.None&lt;/code&gt; is defined), no label is set.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.uxap.ObjectPageDynamicHeaderContent'-->
<xsd:complexType name="_ObjectPageDynamicHeaderContentType">
<xsd:complexContent>
<xsd:extension base=":_DynamicPageHeaderType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.uxap.ObjectPageDynamicHeaderTitle'-->
<xsd:complexType name="_ObjectPageDynamicHeaderTitleType">
<xsd:complexContent>
<xsd:extension base=":_DynamicPageTitleType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.uxap.ObjectPageHeader'-->
<xsd:complexType name="_ObjectPageHeaderType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'actions'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
<xsd:element name="breadcrumbs" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The breadcrumbs displayed in the &lt;code&gt;ObjectPageHeader&lt;/code&gt;.
If this aggregation is set, the &lt;code&gt;breadCrumbsLinks&lt;/code&gt; aggregation is omitted.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n2:Breadcrumbs"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="breadCrumbsLinks" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A list of all the active link elements in the BreadCrumbs control.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n2:Link"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="navigationBar" minOccurs="0">
<xsd:annotation>
<xsd:documentation>An instance of sap.m.Bar to be embedded in the header</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n2:Bar"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="actions" minOccurs="0">
<xsd:annotation>
<xsd:documentation>List of actions that will be displayed in the header.
You can use ObjectPageHeaderActionButton controls to achieve a different visual representation of the action buttons in the action bar and the action sheet (overflow menu).
You can use ObjectPageHeaderLayoutData to display a visual separator.

&lt;b&gt;Note:&lt;/b&gt; If an action is placed inside the overflow area, an additional
&lt;code&gt;bInOverflow&lt;/code&gt; parameter is passed along with the &lt;code&gt;press&lt;/code&gt;
event to indicate that a popup shouldn't be opened from that action and a dialog
should be used instead.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="sideContentButton" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A button that is used for opening the side content of the page or some additional content.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n2:Button"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="titleSelectorTooltip" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A custom tooltip for the title selector button.

The custom tooltip will be visible if the &lt;code&gt;showTitleSelector&lt;/code&gt;
property is set to &lt;code&gt;true&lt;/code&gt;.

&lt;b&gt;Note:&lt;/b&gt; If the aggregation is destroyed or set to invalid value, the
default tooltip will be set. The default tooltip text is "Related options".</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:TooltipBase"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="objectImageURI" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The URL of the image, representing the business object</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="objectImageAlt" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The text to be used for the Alt and Tooltip attribute of the image, supplied via the objectImageURI property</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="objectImageDensityAware" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>The value of densityAware for the image, supplied via the objectImageURI property.
See sap.m.Image for more details on densityAware.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="objectTitle" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The title of the object</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="objectSubtitle" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The description of the object</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="objectImageShape" type="n4:_ObjectPageHeaderPictureShapeType">
<xsd:annotation>
<xsd:documentation>Determines whether the picture should be displayed in a square or with a circle-shaped mask.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="isObjectIconAlwaysVisible" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the icon should always be visible or visible only when the header is snapped.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="isObjectTitleAlwaysVisible" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the title should always be visible or visible only when the header is snapped.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="isObjectSubtitleAlwaysVisible" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the subtitle should always be visible or visible only when the header is snapped.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="isActionAreaAlwaysVisible" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the action buttons should always be visible or visible only when the header is snapped.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="headerDesign" type="n4:_ObjectPageHeaderDesignType">
<xsd:annotation>
<xsd:documentation>Determines the design of the header - Light or Dark.
&lt;b&gt;Note: &lt;/b&gt;This property is deprecated. It will continue to work in the Blue Crystal theme,
but it will not be taken into account for the Belize themes.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showTitleSelector" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>When set to true, the selector arrow icon/image is shown and can be pressed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="markFavorite" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Set the favorite state to true or false. The showMarkers property must be true for this property to take effect.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="markFlagged" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Set the flagged state to true or false. The showMarkers property must be true for this property to take effect.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showMarkers" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Indicates if object page header title supports showing markers such as flagged and favorite.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="markLocked" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Set the locked state of the objectPageHeader.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showPlaceholder" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Enables support of a placeholder image in case no image is specified or the URL of the provided image is invalid.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="markChanges" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Marks that there are unsaved changes in the objectPageHeader.
The markChanges state cannot be used together with the markLocked state.
If both are set to true, only the locked state will be displayed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="titleSelectorPress" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the objectPage header title selector (down-arrow) is pressed</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="markLockedPress" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the Locked button is pressed</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="markChangesPress" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the unsaved changes button is pressed</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.uxap.ObjectPageHeaderActionButton'-->
<xsd:complexType name="_ObjectPageHeaderActionButtonType">
<xsd:complexContent>
<xsd:extension base="n2:_ButtonType">
<xsd:attribute name="hideText" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Hide the button text when rendered into the headerTitle part of the ObjectPageLayout.
This is useful if you want to display icons only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="hideIcon" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Hide the button icon when rendered into the headerTitle part of the ObjectPageLayout.
This is useful if you want to display texts only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="importance" type="n4:_ImportanceType">
<xsd:annotation>
<xsd:documentation>Determines the order in which the button overflows.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.uxap.ObjectPageHeaderContent'-->
<xsd:complexType name="_ObjectPageHeaderContentType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="content" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The list of Objects of type sap.ui.core.Control.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="contentDesign" type="n4:_ObjectPageHeaderDesignType">
<xsd:annotation>
<xsd:documentation>Determines the design of the header - Light or Dark.
&lt;b&gt;Note: &lt;/b&gt;This property is deprecated. It will continue to work in the Blue Crystal theme,
but it will not be taken into account for the Belize themes.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.uxap.ObjectPageHeaderLayoutData'-->
<xsd:complexType name="_ObjectPageHeaderLayoutDataType">
<xsd:complexContent>
<xsd:extension base="n0:_LayoutDataType">
<xsd:attribute name="visibleS" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If this property is set the control will be visible (or not) in a small sized layout.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="visibleM" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If this property is set the control will be visible (or not) in a medium sized layout.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="visibleL" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If this property is set the control will be visible (or not) in a large sized layout.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showSeparatorBefore" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If this property is set the control will display a separator before it.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showSeparatorAfter" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If this property is set the control will display a separator after it.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>If this property is set the control will take the provided size.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.uxap.ObjectPageLayout'-->
<xsd:complexType name="_ObjectPageLayoutType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'sections'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n4:ObjectPageSection"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="sections" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The sections that make up the Object page content area.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n4:ObjectPageSection"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="headerTitle" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Object page header title - the upper, always static, part of the Object page header.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="headerContent" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Object page header content - the dynamic part of the Object page header.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="footer" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Object page floating footer.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="landmarkInfo" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Accessible landmark settings to be applied on the containers of the &lt;code&gt;sap.uxap.ObjectPageLayout&lt;/code&gt; control.

If not set, no landmarks will be written.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:ObjectPageAccessibleLandmarkInfo"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="showAnchorBar" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the Navigation bar (Anchor bar) is displayed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showAnchorBarPopover" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="upperCaseAnchorBar" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the Anchor bar items are displayed in upper case.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="backgroundDesignAnchorBar" type="n2:_BackgroundDesignType">
<xsd:annotation>
<xsd:documentation>Determines the background color of the &lt;code&gt;AnchorBar&lt;/code&gt;.

&lt;b&gt;Note:&lt;/b&gt; The default value of &lt;code&gt;backgroundDesignAnchorBar&lt;/code&gt; property is null.
If the property is not set, the color of the background is &lt;code&gt;@sapUiObjectHeaderBackground&lt;/code&gt;,
which depends on the specific theme.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>Determines the height of the ObjectPage.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="enableLazyLoading" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Enable lazy loading for the Object page Subsections.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="subSectionLayout" type="n4:_ObjectPageSubSectionLayoutType">
<xsd:annotation>
<xsd:documentation>Determines whether Subsection titles are displayed on top or to the left of the Subsection content.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="sectionTitleLevel" type="n0:_TitleLevelType">
<xsd:annotation>
<xsd:documentation>Determines the ARIA level of the &lt;code&gt;ObjectPageSection&lt;/code&gt; and &lt;code&gt;ObjectPageSubSection&lt;/code&gt; titles.
The ARIA level is used by assisting technologies, such as screen readers, to create a hierarchical site map for faster navigation.

&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Defining a &lt;code&gt;sectionTitleLevel&lt;/code&gt; will add &lt;code&gt;aria-level&lt;/code&gt; attribute from 1 to 6
instead of changing the titles` HTML tag from H1 to H6.
&lt;br&gt;For example: if &lt;code&gt;sectionTitleLevel&lt;/code&gt; is &lt;code&gt;TitleLevel.H1&lt;/code&gt;,
it will result as aria-level of 1 added to the &lt;code&gt;ObjectPageSection&lt;/code&gt; title.
&lt;/li&gt;

&lt;li&gt; The &lt;code&gt;ObjectPageSubSection&lt;/code&gt; title
would have &lt;code&gt;aria-level&lt;/code&gt; one level lower than the defined.
For example: if &lt;code&gt;sectionTitleLevel&lt;/code&gt; is &lt;code&gt;TitleLevel.H1&lt;/code&gt;,
it will result as aria-level of 2 added to the &lt;code&gt;ObjectPageSubSection&lt;/code&gt; title.&lt;/li&gt;

&lt;li&gt; It is possible to define a &lt;code&gt;titleLevel&lt;/code&gt; on &lt;code&gt;ObjectPageSection&lt;/code&gt; or &lt;code&gt;ObjectPageSubSection&lt;/code&gt; level.
In this case the value of this property will be ignored.
&lt;/li&gt;
&lt;/ul&gt;</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="useIconTabBar" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the navigation mode is tab-based instead of the default anchor bar. If enabled,
the sections are displayed separately on each tab rather than having all of them visible at the same time.

&lt;b&gt;Note:&lt;/b&gt; Keep in mind that the &lt;code&gt;sap.m.IconTabBar&lt;/code&gt; control is no longer used for the tab navigation mode.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showHeaderContent" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines the visibility of the Header content (headerContent aggregation).</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="useTwoColumnsForLargeScreen" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the to use two column layout for the L screen size.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showTitleInHeaderContent" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the title, image, markers and selectTitleArrow are shown in the Header content area.

&lt;b&gt;Note&lt;/b&gt;: This property is only taken into account if an instance of
&lt;code&gt;sap.uxap.ObjectPageHeader&lt;/code&gt; is used for the &lt;code&gt;headerTitle&lt;/code&gt; aggregation.&lt;/li&gt;</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showOnlyHighImportance" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether sections and subsections with importance Low and Medium are hidden even on large screens.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="isChildPage" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the page is a child page and renders it with a different design.
Child pages have an additional (darker/lighter) stripe on the left side of their header content area.

&lt;b&gt;Note&lt;/b&gt;: This property is only taken into account if an instance of
&lt;code&gt;sap.uxap.ObjectPageHeader&lt;/code&gt; is used for the &lt;code&gt;headerTitle&lt;/code&gt; aggregation.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="alwaysShowContentHeader" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether Header Content will always be expanded on desktop.

&lt;b&gt;Note&lt;/b&gt;: This property is only taken into account if an instance of
&lt;code&gt;sap.uxap.ObjectPageHeader&lt;/code&gt; is used for the &lt;code&gt;headerTitle&lt;/code&gt; aggregation.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="headerContentPinnable" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the Header Content area can be pinned.

When set to &lt;code&gt;true&lt;/code&gt;, a pin button is displayed within the Header Content area.
The pin button allows the user to make the Header Content always visible
at the top of the page above any scrollable content.

&lt;b&gt;Note:&lt;/b&gt; This property is only taken into account if an instance of
&lt;code&gt;sap.uxap.ObjectPageDynamicHeaderTitle&lt;/code&gt; is used for the &lt;code&gt;headerTitle&lt;/code&gt; aggregation.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="toggleHeaderOnTitleClick" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the user can switch between the expanded/collapsed states of the
&lt;code&gt;sap.uxap.ObjectPageDynamicHeaderContent&lt;/code&gt; by clicking on the &lt;code&gt;sap.uxap.ObjectPageDynamicHeaderTitle&lt;/code&gt;.
If set to &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;sap.uxap.ObjectPageDynamicHeaderTitle&lt;/code&gt; is not clickable and the application
must provide other means for expanding/collapsing the &lt;code&gt;sap.uxap.ObjectPageDynamicHeaderContent&lt;/code&gt;, if necessary.

&lt;b&gt;Note:&lt;/b&gt; This property is only taken into account if an instance of
&lt;code&gt;sap.uxap.ObjectPageDynamicHeaderTitle&lt;/code&gt; is used for the &lt;code&gt;headerTitle&lt;/code&gt; aggregation.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="preserveHeaderStateOnScroll" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Preserves the current header state when scrolling.
For example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;&lt;li&gt;This property is only taken into account if an instance of &lt;code&gt;sap.uxap.ObjectPageDynamicHeaderTitle&lt;/code&gt; is used for the &lt;code&gt;headerTitle&lt;/code&gt; aggregation.&lt;/li&gt;
&lt;li&gt;Based on internal rules, the value of the property is not always taken into account - for example,
when the control is rendered on tablet or mobile and the control`s title and header
are with height larger than the given threshold.&lt;/li&gt;&lt;/ul&gt;</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showEditHeaderButton" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether an Edit button will be displayed in Header Content.

&lt;b&gt;Note&lt;/b&gt;: This property is only taken into account if an instance of
&lt;code&gt;sap.uxap.ObjectPageHeader&lt;/code&gt; is used for the &lt;code&gt;headerTitle&lt;/code&gt; aggregation.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="flexEnabled" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Specifies whether the object page enables flexibility features, such as hiding and adding sections.&lt;br&gt;
For more information about SAPUI5 flexibility, refer to the Developer Guide.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showFooter" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the footer is visible.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="selectedSection" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The section that is selected by default on load.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="toggleAnchorBar" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the Anchor bar is switched from moving to fixed or the other way round.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="editHeaderButtonPress" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the Edit Header button is pressed</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="navigate" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the selected section is changed using the navigation.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.uxap.ObjectPageLazyLoader'-->
<xsd:complexType name="_ObjectPageLazyLoaderType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:sequence>
<!--default aggregation 'content'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
<xsd:element name="content" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Controls to be displayed after this element is unstashed</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.uxap.ObjectPageSection'-->
<xsd:complexType name="_ObjectPageSectionType">
<xsd:complexContent>
<xsd:extension base="n4:_ObjectPageSectionBaseType">
<xsd:sequence>
<!--default aggregation 'subSections'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n4:ObjectPageSubSection"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="subSections" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The list of Subsections.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n4:ObjectPageSubSection"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="showTitle" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether to display the Section title or not.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="titleUppercase" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the Section title is displayed in upper case.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="selectedSubSection" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The most recently selected Subsection by the user.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.uxap.ObjectPageSectionBase'-->
<xsd:complexType name="_ObjectPageSectionBaseType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="customAnchorBarButton" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The custom button that will provide a link to the section in the ObjectPageLayout anchor bar.
This button will be used as a custom template to be into the ObjectPageLayout anchorBar area, therefore property changes happening on this button template after the first rendering won't affect the actual button copy used in the anchorBar.

If you want to change some of the button properties, you would need to bind them to a model.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n2:Button"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Section Title</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="titleLevel" type="n0:_TitleLevelType">
<xsd:annotation>
<xsd:documentation>Determines the ARIA level of the &lt;code&gt;ObjectPageSectionBase&lt;/code&gt; title.
The ARIA level is used by assisting technologies, such as screen readers, to create a hierarchical site map for faster navigation.

&lt;b&gt;Note:&lt;/b&gt; Defining a &lt;code&gt;titleLevel&lt;/code&gt; will add &lt;code&gt;aria-level&lt;/code&gt; attribute from 1 to 6,
instead of changing the &lt;code&gt;ObjectPageSectionBase&lt;/code&gt; title HTML tag from H1 to H6.
&lt;br&gt;For example: if &lt;code&gt;titleLevel&lt;/code&gt; is &lt;code&gt;TitleLevel.H1&lt;/code&gt;,
it will result as aria-level of 1 added to the &lt;code&gt;ObjectPageSectionBase&lt;/code&gt; title.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="importance" type="n4:_ImportanceType">
<xsd:annotation>
<xsd:documentation>Determines whether the section will be hidden on low resolutions.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.uxap.ObjectPageSubSection'-->
<xsd:complexType name="_ObjectPageSubSectionType">
<xsd:complexContent>
<xsd:extension base="n4:_ObjectPageSectionBaseType">
<xsd:sequence>
<!--default aggregation 'blocks'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
<xsd:element name="blocks" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Controls to be displayed in the subsection

&lt;b&gt;Note:&lt;/b&gt; The SAP Fiori Design guidelines require that the
&lt;code&gt;ObjectPageHeader&lt;/code&gt;'s content and the &lt;code&gt;ObjectPage&lt;/code&gt;'s subsection content
are aligned vertically. When using {@link sap.ui.layout.form.Form},
{@link sap.m.Panel}, {@link sap.m.Table} and {@link sap.m.List} in the subsection
content area of &lt;code&gt;ObjectPage&lt;/code&gt;, if the content is not already aligned, you need to adjust their left
text offset to achieve the vertical alignment.  To do this, apply the
&lt;code&gt;sapUxAPObjectPageSubSectionAlignContent&lt;/code&gt;
CSS class to them and set their &lt;code&gt;width&lt;/code&gt; property to &lt;code&gt;auto&lt;/code&gt;
(if not set by default).

Example:

&lt;pre&gt;
&lt;code&gt; &amp;lt;Panel class="sapUxAPObjectPageSubSectionAlignContent" width="auto"&amp;gt;&amp;lt;/Panel&amp;gt; &lt;/code&gt;
&lt;/pre&gt;</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="moreBlocks" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Additional controls to display when the Show more / See all / (...) button is pressed</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="actions" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Actions available for this Subsection</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="mode" type="n4:_ObjectPageSubSectionModeType">
<xsd:annotation>
<xsd:documentation>A mode property that will be passed to the controls in the blocks and moreBlocks aggregations. Only relevant if these aggregations use Object page blocks.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="titleUppercase" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the Subsection title is displayed in upper case.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<xsd:simpleType name="_BlockBaseColumnLayoutType">
<xsd:restriction base="xsd:string">
<xsd:pattern value="auto|[1-4]{1}"/>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_BlockBaseFormAdjustmentType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="BlockColumns">
<xsd:annotation>
<xsd:documentation>Any form within the block will be automatically adjusted to have as many columns as the colspan of its parent block.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="OneColumn">
<xsd:annotation>
<xsd:documentation>Any form within the block will be automatically adjusted to have only one column.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="None">
<xsd:annotation>
<xsd:documentation>No automatic adjustment of forms.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_ImportanceType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Low">
<xsd:annotation>
<xsd:documentation>Low importance of the content.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Medium">
<xsd:annotation>
<xsd:documentation>Medium importance of the content.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="High">
<xsd:annotation>
<xsd:documentation>High importance of the content.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_ObjectPageConfigurationModeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="JsonURL">
<xsd:annotation>
<xsd:documentation>Determines the JSON URL.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="JsonModel">
<xsd:annotation>
<xsd:documentation>Determines the JSON model.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_ObjectPageHeaderDesignType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Light">
<xsd:annotation>
<xsd:documentation>Light theme for the &lt;code&gt;ObjectPageHeader&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Dark">
<xsd:annotation>
<xsd:documentation>Dark theme for the &lt;code&gt;ObjectPageHeader&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_ObjectPageHeaderPictureShapeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Circle">
<xsd:annotation>
<xsd:documentation>Circle shape for the images in the &lt;code&gt;ObjectPageHeader&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Square">
<xsd:annotation>
<xsd:documentation>Square shape for the images in the &lt;code&gt;ObjectPageHeader&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_ObjectPageSubSectionLayoutType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="TitleOnTop">
<xsd:annotation>
<xsd:documentation>Title and actions on top of the block area.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="TitleOnLeft">
<xsd:annotation>
<xsd:documentation>Title and actions on the left, inside the block area.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_ObjectPageSubSectionModeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Collapsed">
<xsd:annotation>
<xsd:documentation>Collapsed mode of display of the &lt;code&gt;ObjectPageLayout&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Expanded">
<xsd:annotation>
<xsd:documentation>Expanded mode of displaying the &lt;code&gt;ObjectPageLayout&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:schema>
