<?xml version="1.0" encoding="UTF-8"?><xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="sap.f" xmlns:n2="sap.ui.unified" xmlns:n3="sap.m" xmlns:n4="sap.f" xmlns:n0="sap.ui.core" xmlns:n1="sap.ui.layout">
<xsd:import namespace="sap.ui.unified"/>
<xsd:import namespace="sap.m"/>
<xsd:import namespace="sap.ui.core"/>
<xsd:import namespace="sap.ui.layout"/>
<xsd:element name="Avatar" type="n4:_AvatarType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>An image-like control that has different display options for representing images, initials,
and icons.

&lt;h3&gt;Overview&lt;/h3&gt;

The &lt;code&gt;Avatar&lt;/code&gt; control allows the usage of different content, shapes, and sizes
depending on the use case.

The content types that can be displayed are either images, icons, or initials. The shape
can be circular or square. There are several predefined sizes, as well as an option to
set a custom size.

&lt;h3&gt;Usage&lt;/h3&gt;

Up to two Latin letters can be displayed as initials in an &lt;code&gt;Avatar&lt;/code&gt;. If there
are more than two letters, or if there's a non-Latin character present, a default image
placeholder will be created.

There are two options for how the displayed image can fit inside the
available area:
&lt;ul&gt;
&lt;li&gt;Cover - the image is scaled to cover all of the available area&lt;/li&gt;
&lt;li&gt;Contain - the image is scaled as large as possible while both
its height and width fit inside the avalable area&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Note:&lt;/b&gt; To set a custom size for the &lt;code&gt;Avatar&lt;/code&gt;, you have to choose the &lt;code&gt;Custom&lt;/code&gt;
value for the &lt;code&gt;displaySize&lt;/code&gt; property. Then, you have to set both the
&lt;code&gt;customDisplaySize&lt;/code&gt; and &lt;code&gt;customFontSize&lt;/code&gt; properties.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="Card" type="n4:_CardType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>A control that represents a container with a predefined header and content.

&lt;h3&gt;Overview&lt;/h3&gt;
The card is a container for grouping and displaying information.

&lt;h3&gt;Structure&lt;/h3&gt;
You can control the width and height of the card, using properties.
The &lt;code&gt;Card&lt;/code&gt; has the following aggregations:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;header&lt;/code&gt; - can be either a {@link sap.f.cards.Header Header} or a {@link sap.f.cards.NumericHeader NumericHeader}
&lt;li&gt;&lt;code&gt;content&lt;/code&gt; - can be any {@link sap.ui.core.Control Control}.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Guidelines:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A card should represent a task or visualize a specific set of information.&lt;/li&gt;
&lt;li&gt;It is recommended to use cards on home page layouts.&lt;/li&gt;
&lt;li&gt;The card shouldn't be large with a lot of content.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Usage&lt;/h3&gt;
To show a KPI value or any numeric information, use {@link sap.f.cards.NumericHeader NumericHeader} as a card header.
For any other use cases, use the regular {@link sap.f.cards.Header Header}.
Recommended content:
- List
- Table
- Object information
- Charts
- Timelines
- Images

&lt;i&gt;When to use&lt;/i&gt;
&lt;ul&gt;
&lt;li&gt;When you need multiple cards on a home page layout.&lt;/li&gt;
&lt;li&gt;When you have to achieve simple card visualization.&lt;/li&gt;
&lt;/ul&gt;

&lt;i&gt;When not to use&lt;/i&gt;
&lt;ul&gt;
&lt;li&gt;When you have to reuse the card between applications. For such cases, use: {@link sap.ui.integration.widgets.Card Integration Card}.&lt;/li&gt;
&lt;li&gt;When you need nesting. For such cases, use: {@link sap.m.Panel Panel}.&lt;/li&gt;
&lt;li&gt;When the card is not part of a card layout. For such cases, use: {@link sap.m.Panel Panel}.&lt;/li&gt;
&lt;li&gt;When you need more header configuration flexibility.&lt;/li&gt;
&lt;/ul&gt;</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="DynamicPage" type="n4:_DynamicPageType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>A layout control, representing a web page, consisting of a title, header with dynamic behavior, a content area, and an optional floating footer.

&lt;h3&gt;Overview&lt;/h3&gt;

The control consist of several components:

&lt;ul&gt;&lt;li&gt;{@link sap.f.DynamicPageTitle DynamicPageTitle} - consists of a heading
on the left side, content in the middle, and actions on the right. The displayed
content changes based on the current mode of the {@link sap.f.DynamicPageHeader
DynamicPageHeader}.&lt;/li&gt;
&lt;li&gt;{@link sap.f.DynamicPageHeader DynamicPageHeader} - a generic container, which
can contain a single layout control and does not care about the content alignment
and responsiveness. The header works in two modes - expanded and snapped and its
behavior can be adjusted with the help of different properties.&lt;/li&gt;
&lt;li&gt;Content area - a generic container, which can have a single UI5 layout control
and does not care about the content alignment and responsiveness.&lt;/li&gt;
&lt;li&gt;Footer - positioned at the bottom with a small offset and used for additional
actions, the footer floats above the content. It can be any {@link sap.m.IBar}
control.&lt;/li&gt;&lt;/ul&gt;

&lt;h3&gt;Usage&lt;/h3&gt;

Use the &lt;code&gt;DynamicPage&lt;/code&gt; if you need to have a title, that is always visible
and a header, that has configurable Expanding/Snapping functionality.
If you don't need the Expanding/Snapping functionality it is better to use the
{@link sap.m.Page} as a lighter control.

&lt;ul&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;li&gt;If you're displaying a {@link sap.m.FlexBox} with non-adaptive content
(doesn't stretch to fill the available space), it is recommended to set the
&lt;code&gt;fitContainer&lt;/code&gt; property of the {@link sap.m.FlexBox FlexBox} to
&lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If you are displaying a {@link sap.ui.table.Table}, keep in mind that it is
non-adaptive and may cause unpredicted behavior for the &lt;code&gt;DynamicPage&lt;/code&gt;
on smaller screen sizes, such as mobile.&lt;/li&gt;
&lt;li&gt;Snapping of the {@link sap.f.DynamicPageTitle DynamicPageTitle} is not supported in the following case:
When the &lt;code&gt;DynamicPage&lt;/code&gt; has a scroll bar, the control usually scrolls to the snapping point - the point,
where the {@link sap.f.DynamicPageHeader DynamicPageHeader} is scrolled out completely.
However, when there is a scroll bar, but not enough content to reach the snapping point,
the snapping is not possible using scrolling.&lt;/li&gt;
&lt;li&gt;When using {@link sap.ui.layout.form.Form},
{@link sap.m.Panel}, {@link sap.m.Table} and {@link sap.m.List} controls in the content of
&lt;code&gt;DynamicPage&lt;/code&gt;, you need to adjust their left text offset if you want to achieve vertical alignment
between the &lt;code&gt;sap.f.DynamicPageHeader&lt;/code&gt;`s  content and &lt;code&gt;DynamicPage&lt;/code&gt;`s content.
For more information, see the documentation for the &lt;code&gt;content&lt;/code&gt; aggregation.&lt;/li&gt;&lt;/ul&gt;

&lt;h3&gt;Responsive Behavior&lt;/h3&gt;

The responsive behavior of the &lt;code&gt;DynamicPage&lt;/code&gt; depends on the behavior of
the content that is displayed. To adjust the &lt;code&gt;DynamicPage&lt;/code&gt; content
padding, the &lt;code&gt;sapUiContentPadding&lt;/code&gt;, &lt;code&gt;sapUiNoContentPadding&lt;/code&gt;,
and &lt;code&gt;sapUiResponsiveContentPadding&lt;/code&gt; CSS classes can be used.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="DynamicPageAccessibleLandmarkInfo" type="n4:_DynamicPageAccessibleLandmarkInfoType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>Settings for accessible landmarks which can be applied to the container elements of a &lt;code&gt;sap.f.DynamicPage&lt;/code&gt; control.
These landmarks are used by assistive technologies (such as screenreaders) to provide a meaningful page overview.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="DynamicPageHeader" type="n4:_DynamicPageHeaderType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Header of the {@link sap.f.DynamicPage}.

&lt;h3&gt;Overview&lt;/h3&gt;

The &lt;code&gt;DynamicPageHeader&lt;/code&gt; control is part of the {@link sap.f.DynamicPage} family
and is used to serve as header of the {@link sap.f.DynamicPage DynamicPage}.

&lt;h3&gt;Usage&lt;/h3&gt;

The &lt;code&gt;DynamicPageHeader&lt;/code&gt; can hold any layout control and has  two states - expanded
and collapsed (snapped). The switching between these states happens when:

&lt;ul&gt;&lt;li&gt;the user scrolls below its bottom margin&lt;/li&gt;
&lt;li&gt;the user clicks on the {@link sap.f.DynamicPageTitle DynamicPageTitle}&lt;/li&gt;
&lt;li&gt;through the {@link sap.f.DynamicPage DynamicPage} property &lt;code&gt;headerExpanded&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;h3&gt;Responsive Behavior&lt;/h3&gt;

The responsive behavior of the &lt;code&gt;DynamicPageHeader&lt;/code&gt; depends on the behavior of the
content that is displayed.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="DynamicPageTitle" type="n4:_DynamicPageTitleType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Title of the {@link sap.f.DynamicPage}.

&lt;h3&gt;Overview&lt;/h3&gt;

The &lt;code&gt;DynamicPageTitle&lt;/code&gt; control is part of the {@link sap.f.DynamicPage}
family and is used to serve as title of the {@link sap.f.DynamicPage DynamicPage}.

&lt;h3&gt;Usage&lt;/h3&gt;

The &lt;code&gt;DynamicPageTitle&lt;/code&gt; can hold any control and displays the most important
information regarding the object that will always remain visible while scrolling.

&lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;actions&lt;/code&gt; aggregation accepts any UI5 control, but it`s
recommended to use controls, suitable for {@link sap.m.Toolbar} and {@link sap.m.OverflowToolbar}.

If the &lt;code&gt;toggleHeaderOnTitleClick&lt;/code&gt; property of the {@link sap.f.DynamicPage DynamicPage}
is set to &lt;code&gt;true&lt;/code&gt;, the user can switch between the expanded/collapsed states of the
{@link sap.f.DynamicPageHeader DynamicPageHeader} by clicking on the &lt;code&gt;DynamicPageTitle&lt;/code&gt;
or by using the expand/collapse visual indicators, positioned at the bottom of the
&lt;code&gt;DynamicPageTitle&lt;/code&gt; and the &lt;code&gt;DynamicPageHeader&lt;/code&gt;.

If set to &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;DynamicPageTitle&lt;/code&gt; is not clickable,
the visual indicators are not available, and the app must provide other means for
expanding/collapsing the &lt;code&gt;DynamicPageHeader&lt;/code&gt;, if necessary.

&lt;h3&gt;Responsive Behavior&lt;/h3&gt;

The responsive behavior of the &lt;code&gt;DynamicPageTitle&lt;/code&gt; depends on the behavior of the
content that is displayed.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="FlexibleColumnLayout" type="n4:_FlexibleColumnLayoutType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Implements the master-detail-detail paradigm by displaying up to three pages in separate columns.

&lt;h3&gt;Overview&lt;/h3&gt;

The control is logically similar to {@link sap.m.SplitContainer} with the difference that it capable of handling
three columns (referred to as &lt;code&gt;Begin&lt;/code&gt;, &lt;code&gt;Mid&lt;/code&gt; and &lt;code&gt;End&lt;/code&gt;) rather than two
(&lt;code&gt;Master&lt;/code&gt;, &lt;code&gt;Detail&lt;/code&gt;). The width of the three columns is variable.

There are several possible layouts that can be changed either with the control's API, or by the user with the help of layout arrows.

Internally the control makes use of three instances of {@link sap.m.NavContainer}, thus forming the three columns.

&lt;h3&gt;Usage&lt;/h3&gt;

Use this control for applications that need to display several logical levels of related information side by side (e.g. list of items, item, sub-item, etc.).
The control is flexible in a sense that the application can focus the user's attention on one particular column by making it larger or even fullscreen.

The columns are accessible with the &lt;code&gt;beginColumnPages&lt;/code&gt;, &lt;code&gt;midColumnPages&lt;/code&gt; and &lt;code&gt;endColumnPages&lt;/code&gt; aggregations.

The relative sizes and the visibility of the three columns are determined based on the value of the {@link sap.f.LayoutType layout} property.

Changes to the layout due to user interaction are communicated to the app with the &lt;code&gt;stateChange&lt;/code&gt; event.

&lt;ul&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;li&gt;To easily implement the recommended UX design of a &lt;code&gt;sap.f.FlexibleColumnLayout&lt;/code&gt;-based app,
you can use the &lt;code&gt;sap.f.FlexibleColumnLayoutSemanticHelper&lt;/code&gt; class.&lt;/li&gt;
&lt;li&gt;To facilitate the navigation and view loading, you can use the {@link sap.f.routing.Router} &lt;/li&gt;&lt;/ul&gt;

&lt;h3&gt;Responsive Behavior&lt;/h3&gt;

The control automatically displays the maximum possible number of columns based on the device size and current &lt;code&gt;layout&lt;/code&gt;.
The app does not need to take into consideration the current device/screen size, but only to add content to the
columns and change the value of the &lt;code&gt;layout&lt;/code&gt; property.

For detailed information, see {@link sap.f.LayoutType LayoutType} enumeration.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="GridContainer" type="n4:_GridContainerType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>A layout container control used for aligning items with various sizes in a simple grid.

&lt;h3&gt;Overview&lt;/h3&gt;

The control is used to align tiles, cards and other controls in configuration, such as a home page or a dashboard.
It represents a grid layout with specific row and column sizes, in which the items can take any number of rows and columns.

The number of columns and rows each item takes can be configured with the use of the &lt;code&gt;{@link sap.f.GridContainerItemLayoutData}&lt;/code&gt;.

All rows have the same height and all columns have the same width. Their sizes can be configured with the use of the &lt;code&gt;layout&lt;/code&gt; aggregation and &lt;code&gt;{@link sap.f.GridContainerSettings}&lt;/code&gt;.

&lt;h3&gt;Usage&lt;/h3&gt;

&lt;i&gt;When to use&lt;/i&gt;
&lt;ul&gt;
&lt;li&gt;For aligning home page and dashboard items like Tiles and Cards in a simple grid system with equally sized rows and columns.&lt;/li&gt;
&lt;/ul&gt;

&lt;i&gt;When not to use&lt;/i&gt;
&lt;ul&gt;
&lt;li&gt;If a more complex layout grid system, where columns and rows may vary in size, is needed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Example:&lt;/h3&gt;
&lt;pre&gt;
&amp;lt;f:GridContainer&amp;gt;
	&amp;lt;f:layout&amp;gt;
		&amp;lt;f:GridContainerSettings rowSize=&amp;quot;5rem&amp;quot; columnSize=&amp;quot;5rem&amp;quot; gap=&amp;quot;1rem&amp;quot; /&amp;gt;
	&amp;lt;/f:layout&amp;gt;
	&amp;lt;f:layoutS&amp;gt;
		&amp;lt;f:GridContainerSettings rowSize=&amp;quot;4rem&amp;quot; columnSize=&amp;quot;4rem&amp;quot; gap=&amp;quot;0.5rem&amp;quot; /&amp;gt;
	&amp;lt;/f:layoutS&amp;gt;
	&amp;lt;f:items&amp;gt;
		&amp;lt;GenericTile header=&amp;quot;Sales Fulfillment&amp;quot;&amp;gt;
			&amp;lt;layoutData&amp;gt;
				&amp;lt;f:GridContainerItemLayoutData rows=&amp;quot;2&amp;quot; columns=&amp;quot;2&amp;quot; /&amp;gt;
			&amp;lt;/layoutData&amp;gt;
		&amp;lt;/GenericTile&amp;gt;
		&amp;lt;w:Card manifest=&amp;quot;url-to-manifest&amp;quot;&amp;gt;
			&amp;lt;w:layoutData&amp;gt;
				&amp;lt;f:GridContainerItemLayoutData rows=&amp;quot;6&amp;quot; columns=&amp;quot;3&amp;quot; /&amp;gt;
			&amp;lt;/w:layoutData&amp;gt;
		&amp;lt;/w:Card&amp;gt;
		&amp;lt;Panel&amp;gt;
			&amp;lt;layoutData&amp;gt;
				&amp;lt;f:GridContainerItemLayoutData columns=&amp;quot;4&amp;quot; /&amp;gt;
			&amp;lt;/layoutData&amp;gt;
			&amp;lt;Text text=&amp;quot;Sales information&amp;quot; /&amp;gt;
		&amp;lt;/Panel&amp;gt;
	&amp;lt;/f:items&amp;gt;
&amp;lt;/f:GridContainer&amp;gt;
&lt;/pre&gt;</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="GridContainerItemLayoutData" type="n4:_GridContainerItemLayoutDataType" substitutionGroup="n0:LayoutData">
<xsd:annotation>
<xsd:documentation>Holds layout data for an item inside a &lt;code&gt;sap.f.GridContainer&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="GridContainerSettings" type="n4:_GridContainerSettingsType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Holds a set of settings that define the dimensions of &lt;code&gt;sap.f.GridContainer&lt;/code&gt;

Can be used to define the sizes of columns and rows for different screen sizes, by using the &lt;code&gt;layout&lt;/code&gt; aggregations of &lt;code&gt;sap.f.GridContainer&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="GridList" type="n4:_GridListType" substitutionGroup="n3:ListBase">
<xsd:annotation>
<xsd:documentation>A list-based control with grid layout capabilities.

&lt;h3&gt;Overview&lt;/h3&gt;

The control is based on {@link sap.m.ListBase} and adds the flexibility to configure different grid layouts. The layout used is based
on the CSS display grid and the control has a default configuration.

With &lt;code&gt;customLayout&lt;/code&gt; aggregation it is possible to use:
&lt;ul&gt;
&lt;li&gt;Predefined simple grid layouts such as {@link sap.ui.layout.cssgrid.GridBoxLayout GridBoxLayout}&lt;/li&gt;
&lt;li&gt;Flexible grid layouts, such as {@link sap.ui.layout.cssgrid.GridBasicLayout GridBasicLayout} or {@link sap.ui.layout.cssgrid.GridResponsiveLayout GridResponsiveLayout} which reveal the native-browser CSS display grid APIs. For more information, see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout MDN web docs: CSS Grid Layout}&lt;/li&gt;
&lt;/ul&gt;

Every item can override its size by specifying the number of columns and/or rows it will take in the grid.
This is done using {@link sap.ui.layout.cssgrid.GridItemLayoutData GridItemLayoutData}.

&lt;h3&gt;Usage&lt;/h3&gt;

For general cases, use the default grid configuration of the &lt;code&gt;GridList&lt;/code&gt;.
For Box case (equal sized items), use &lt;code&gt;customLayout&lt;/code&gt; aggregation with {@link sap.ui.layout.cssgrid.GridBoxLayout GridBoxLayout}
For Grids which need different configurations based on available width, use &lt;code&gt;customLayout&lt;/code&gt; aggregation with {@link sap.ui.layout.cssgrid.GridResponsiveLayout GridResponsiveLayout}
To set a specific position to an item or define its dimensions in the grid, pass &lt;code&gt;layoutData&lt;/code&gt; of type {@link sap.ui.layout.cssgrid.GridItemLayoutData GridItemLayoutData}

&lt;i&gt;When to use&lt;/i&gt;
&lt;ul&gt;
&lt;li&gt;If {@link sap.m.ListBase} features are required and the items must be positioned in a grid layout&lt;/li&gt;
&lt;/ul&gt;

&lt;i&gt;When not to use&lt;/i&gt;
&lt;ul&gt;
&lt;li&gt;If a list layout is required, use {@link sap.m.List} instead.
&lt;li&gt;If only the layout is required, use {@link sap.ui.layout.cssgrid.CSSGrid} instead.
&lt;/ul&gt;

&lt;h3&gt;Current Limitations&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;For Microsoft Internet Explorer some layouts are not supported, due to browser specifics.&lt;/li&gt;
&lt;li&gt;For Microsoft Edge 15 and older versions some layouts are not supported, due to browser specifics.&lt;/li&gt;
&lt;/ul&gt;</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ShellBar" type="n4:_ShellBarType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>A horizontal bar control holding multiple child controls used as application shell header.

&lt;h3&gt;Overview&lt;/h3&gt;

The &lt;code&gt;ShellBar&lt;/code&gt; is used as the uppermost section (shell) of the app. It is fully
responsive and adaptive, and corresponds to the SAP Fiori Design Guidelines.

&lt;h3&gt;Usage&lt;/h3&gt;

Content specified in the &lt;code&gt;ShellBar&lt;/code&gt; properties and aggregations is automatically
positioned in dedicated places of the control.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="Header" type="n4:_HeaderType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>A control used to group a set of card attributes in a header.

&lt;h3&gt;Overview&lt;/h3&gt;
The &lt;code&gt;Header&lt;/code&gt; displays general information about the card.
You can configure the title, subtitle, status text and icon, using properties.

&lt;h3&gt;Usage&lt;/h3&gt;
You should always set a title.
To show a KPI or any numeric information, use {@link sap.f.cards.NumericHeader NumericHeader} instead.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="NumericHeader" type="n4:_NumericHeaderType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>A control used to group a set of card attributes in a header.

&lt;h3&gt;Overview&lt;/h3&gt;
The &lt;code&gt;NumericHeader&lt;/code&gt; shows general information about the card and allows the configuration of a numeric value visualization.
You can configure the title, subtitle, status text and icon, using properties.

&lt;h3&gt;Usage&lt;/h3&gt;
To show only basic information, use {@link sap.f.cards.Header Header} instead.
It is possible to add more side number indicators, using the &lt;code&gt;sideIndicators&lt;/code&gt; aggregation.
You should always set a title.
You should always have a maximum of two side indicators.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="NumericSideIndicator" type="n4:_NumericSideIndicatorType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>A control used by &lt;code&gt;sap.f.cards.NumericHeader&lt;/code&gt; to hold a set of side indicator attributes.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="AddAction" type="n4:_AddActionType" substitutionGroup="n4:SemanticButton">
<xsd:annotation>
<xsd:documentation>A semantic-specific button, eligible for the &lt;code&gt;addAction&lt;/code&gt; aggregation of the
{@link sap.f.semantic.SemanticPage} to be placed in its title.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="CloseAction" type="n4:_CloseActionType" substitutionGroup="n4:SemanticButton">
<xsd:annotation>
<xsd:documentation>A semantic-specific button, eligible for the &lt;code&gt;closeAction&lt;/code&gt; aggregation of the
{@link sap.f.semantic.SemanticPage} to be placed in its title.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="CopyAction" type="n4:_CopyActionType" substitutionGroup="n4:SemanticButton">
<xsd:annotation>
<xsd:documentation>A semantic-specific button, eligible for the &lt;code&gt;copyAction&lt;/code&gt; aggregation of the
{@link sap.f.semantic.SemanticPage} to be placed in its title.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="DeleteAction" type="n4:_DeleteActionType" substitutionGroup="n4:SemanticButton">
<xsd:annotation>
<xsd:documentation>A semantic-specific button, eligible for the &lt;code&gt;deleteAction&lt;/code&gt; aggregation of the
{@link sap.f.semantic.SemanticPage} to be placed in its title.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="DiscussInJamAction" type="n4:_DiscussInJamActionType" substitutionGroup="n4:SemanticButton">
<xsd:annotation>
<xsd:documentation>A semantic-specific button, eligible for the &lt;code&gt;discussInJamAction&lt;/code&gt; aggregation of the
{@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="EditAction" type="n4:_EditActionType" substitutionGroup="n4:SemanticButton">
<xsd:annotation>
<xsd:documentation>A semantic-specific button, eligible for the &lt;code&gt;editAction&lt;/code&gt; aggregation of the
{@link sap.f.semantic.SemanticPage} to be placed in its title.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ExitFullScreenAction" type="n4:_ExitFullScreenActionType" substitutionGroup="n4:SemanticButton">
<xsd:annotation>
<xsd:documentation>A semantic-specific button, eligible for the &lt;code&gt;exitFullScreenAction&lt;/code&gt; aggregation of the
{@link sap.f.semantic.SemanticPage} to be placed in its title.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="FavoriteAction" type="n4:_FavoriteActionType" substitutionGroup="n4:SemanticToggleButton">
<xsd:annotation>
<xsd:documentation>A semantic-specific button, eligible for the &lt;code&gt;favoriteAction&lt;/code&gt; aggregation of the
{@link sap.f.semantic.SemanticPage} to be placed in its title.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="FlagAction" type="n4:_FlagActionType" substitutionGroup="n4:SemanticToggleButton">
<xsd:annotation>
<xsd:documentation>A semantic-specific button, eligible for the &lt;code&gt;flagAction&lt;/code&gt; aggregation of the
{@link sap.f.semantic.SemanticPage} to be placed in its title.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="FooterMainAction" type="n4:_FooterMainActionType" substitutionGroup="n4:MainAction">
<xsd:annotation>
<xsd:documentation>A semantic-specific button, eligible for the &lt;code&gt;footerMainAction&lt;/code&gt; aggregation of the
{@link sap.f.semantic.SemanticPage} to be placed in its footer.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="FullScreenAction" type="n4:_FullScreenActionType" substitutionGroup="n4:SemanticButton">
<xsd:annotation>
<xsd:documentation>A semantic-specific button, eligible for the &lt;code&gt;fullScreenAction&lt;/code&gt; aggregation of the
{@link sap.f.semantic.SemanticPage} to be placed in its title.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="MainAction" type="n4:_MainActionType" substitutionGroup="n4:SemanticButton">
<xsd:annotation>
<xsd:documentation>Serves as a base class for the {@link sap.f.semantic.TitleMainAction} and {@link sap.f.semantic.FooterMainAction} controls.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="MessagesIndicator" type="n4:_MessagesIndicatorType" substitutionGroup="n4:SemanticButton">
<xsd:annotation>
<xsd:documentation>A semantic-specific button, eligible for the &lt;code&gt;messagesIndicator&lt;/code&gt; aggregation of the
{@link sap.f.semantic.SemanticPage} to be placed in its footer.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="NegativeAction" type="n4:_NegativeActionType" substitutionGroup="n4:SemanticButton">
<xsd:annotation>
<xsd:documentation>A semantic-specific button, eligible for the &lt;code&gt;negativeAction&lt;/code&gt; aggregation of the
{@link sap.f.semantic.SemanticPage} to be placed in its footer.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="PositiveAction" type="n4:_PositiveActionType" substitutionGroup="n4:SemanticButton">
<xsd:annotation>
<xsd:documentation>A semantic-specific button, eligible for the &lt;code&gt;positiveAction&lt;/code&gt; aggregation of the
{@link sap.f.semantic.SemanticPage} to be placed in its footer.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="PrintAction" type="n4:_PrintActionType" substitutionGroup="n4:SemanticButton">
<xsd:annotation>
<xsd:documentation>A semantic-specific button, eligible for the &lt;code&gt;printAction&lt;/code&gt; aggregation of the
{@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SemanticButton" type="n4:_SemanticButtonType" substitutionGroup="n4:SemanticControl">
<xsd:annotation>
<xsd:documentation>A base class for the available semantic actions, such as {@link sap.f.semantic.AddAction AddAction},
{@link sap.f.semantic.CloseAction CloseAction}, etc.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SemanticControl" type="n4:_SemanticControlType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>The base class for the {@link sap.f.semantic.SemanticButton}.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SemanticPage" type="n4:_SemanticPageType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>An enhanced {@link sap.f.DynamicPage}, that contains controls with semantic-specific meaning.

&lt;h3&gt;Overview&lt;/h3&gt;

Content specified in the &lt;code&gt;sap.f.semantic.SemanticPage&lt;/code&gt; aggregations is automatically
positioned in dedicated sections of the title or the footer of the page, depending on
the control's semantics.

The actions in the &lt;code&gt;SemanticPage&lt;/code&gt; title are grouped to text actions or icon actions.
When an aggregation is set, the actions appear in the following predefined order (from left to right):

&lt;ul&gt;Text actions:
&lt;li&gt;The main semantic text action - &lt;code&gt;titleMainAction&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Any custom text actions - &lt;code&gt;titleCustomTextActions&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The semantic text actions - &lt;code&gt;editAction&lt;/code&gt;, &lt;code&gt;deleteAction&lt;/code&gt;, &lt;code&gt;copyAction&lt;/code&gt; and &lt;code&gt;addAction&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;ul&gt;Icon actions:
&lt;li&gt;Any custom icon actions - &lt;code&gt;titleCustomIconActions&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The simple semantic icon actions - &lt;code&gt;favoriteAction&lt;/code&gt; and &lt;code&gt;flagAction&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The share menu semantic icon actions as a drop-down list with the following order:
	&lt;ul&gt;&lt;li&gt;&lt;code&gt;sendEmailAction&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;discussInJamAction&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;shareInJamAction&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;sendMessageAction&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;printAction&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;Any &lt;code&gt;customShareActions&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The navigation semantic actions - &lt;code&gt;fullScreenAction&lt;/code&gt;, &lt;code&gt;exitFullScreenAction&lt;/code&gt;,
and &lt;code&gt;closeAction&lt;/li&gt;&lt;/code&gt;&lt;/ul&gt;

The actions in the &lt;code&gt;SemanticPage&lt;/code&gt; footer are positioned either on its left or right area and have the following predefined order:

&lt;ul&gt;Footer left area:
&lt;li&gt;The semantic text action - &lt;code&gt;messagesIndicator&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The semantic label - &lt;code&gt;draftIndicator&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;ul&gt;Footer right area:
&lt;li&gt;The main semantic text action - &lt;code&gt;footerMainAction&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The semantic text actions - &lt;code&gt;positiveAction&lt;/code&gt; and &lt;code&gt;negativeAction&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Any custom text actions - &lt;code&gt;footerCustomActions&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;h3&gt;Usage&lt;/h3&gt;

Using the &lt;code&gt;SemanticPage&lt;/code&gt; facilitates the implementation of the SAP Fiori 2.0 design guidelines.

&lt;h3&gt;Responsive behavior&lt;/h3&gt;

The responsive behavior of the &lt;code&gt;SemanticPage&lt;/code&gt; depends on the behavior of the content that is displayed.
To adjust the &lt;code&gt;SemanticPage&lt;/code&gt; content padding, the &lt;code&gt;sapUiContentPadding&lt;/code&gt;,
&lt;code&gt;sapUiNoContentPadding&lt;/code&gt;, and &lt;code&gt;sapUiResponsiveContentPadding&lt;/code&gt; CSS classes can be used.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SemanticToggleButton" type="n4:_SemanticToggleButtonType" substitutionGroup="n4:SemanticButton">
<xsd:annotation>
<xsd:documentation>A base class for the {@link sap.f.semantic.FavoriteAction} and {@link sap.f.semantic.FlagAction}.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SendEmailAction" type="n4:_SendEmailActionType" substitutionGroup="n4:SemanticButton">
<xsd:annotation>
<xsd:documentation>A semantic-specific button, eligible for the &lt;code&gt;sendEmailAction&lt;/code&gt; aggregation of the
{@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SendMessageAction" type="n4:_SendMessageActionType" substitutionGroup="n4:SemanticButton">
<xsd:annotation>
<xsd:documentation>A semantic-specific button, eligible for the &lt;code&gt;sendMessageAction&lt;/code&gt; aggregation of the
{@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ShareInJamAction" type="n4:_ShareInJamActionType" substitutionGroup="n4:SemanticButton">
<xsd:annotation>
<xsd:documentation>A semantic-specific button, eligible for the &lt;code&gt;shareInJamAction&lt;/code&gt; aggregation of the
{@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="TitleMainAction" type="n4:_TitleMainActionType" substitutionGroup="n4:MainAction">
<xsd:annotation>
<xsd:documentation>A semantic-specific button, eligible for the &lt;code&gt;titleMainAction&lt;/code&gt; aggregation of the
{@link sap.f.semantic.SemanticPage} to be placed in its title.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<!--type definition for UIElement 'sap.f.Avatar'-->
<xsd:complexType name="_AvatarType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="detailBox" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A &lt;code&gt;sap.m.LightBox&lt;/code&gt; instance, that will be opened automatically when the user interacts with the &lt;code&gt;Avatar&lt;/code&gt; control.

The &lt;code&gt;press&lt;/code&gt; event will still be fired.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:LightBox"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="src" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>Determines the path to the desired image or icon.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="initials" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Defines the displayed initials.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="displayShape" type="n4:_AvatarShapeType">
<xsd:annotation>
<xsd:documentation>Defines the shape of the &lt;code&gt;Avatar&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="displaySize" type="n4:_AvatarSizeType">
<xsd:annotation>
<xsd:documentation>Sets a predefined display size of the &lt;code&gt;Avatar&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="customDisplaySize" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>Specifies custom display size of the &lt;code&gt;Avatar&lt;/code&gt;.

&lt;b&gt;Note:&lt;/b&gt; It takes effect if the &lt;code&gt;displaySize&lt;/code&gt; property is set to &lt;code&gt;Custom&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="customFontSize" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>Specifies custom font size of the &lt;code&gt;Avatar&lt;/code&gt;.

&lt;b&gt;Note:&lt;/b&gt; It takes effect if the &lt;code&gt;displaySize&lt;/code&gt; property is set to &lt;code&gt;Custom&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="imageFitType" type="n4:_AvatarImageFitTypeType">
<xsd:annotation>
<xsd:documentation>Specifies how an image would fit in the &lt;code&gt;Avatar&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="fallbackIcon" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Defines the fallback icon displayed in case of wrong image src and no initials set.

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If not set, a default fallback icon is displayed depending on the set &lt;code&gt;displayShape&lt;/code&gt; property.&lt;/li&gt;
&lt;li&gt;Accepted values are only icons from the SAP icon font.&lt;/li&gt;
&lt;/ul&gt;</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="ariaDescribedBy" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="ariaLabelledBy" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledBy).</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fired when the user selects the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.Card'-->
<xsd:complexType name="_CardType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="header" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Defines the header of the card.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="content" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Defines the content of the card.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>Defines the width of the card.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>Defines the height of the card.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="headerPosition" type="n4:_HeaderPositionType">
<xsd:annotation>
<xsd:documentation>Defines the position of the Card Header.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.DynamicPage'-->
<xsd:complexType name="_DynamicPageType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="title" minOccurs="0">
<xsd:annotation>
<xsd:documentation>&lt;code&gt;DynamicPage&lt;/code&gt; title.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:DynamicPageTitle"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="header" minOccurs="0">
<xsd:annotation>
<xsd:documentation>&lt;code&gt;DynamicPage&lt;/code&gt; header.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:DynamicPageHeader"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="content" minOccurs="0">
<xsd:annotation>
<xsd:documentation>&lt;code&gt;DynamicPage&lt;/code&gt; content.

&lt;b&gt;Note: &lt;/b&gt; You can change the default paddings by adding the following CSS classes:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sapUiContentPadding&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sapUiNoContentPadding&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sapUiResponsiveContentPadding&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
For more information, see
{@link topic:c71f6df62dae47ca8284310a6f5fc80a Using Container Content Padding CSS Classes}.

&lt;b&gt;Note:&lt;/b&gt; The SAP Fiori Design guidelines require that the
&lt;code&gt;DynamicPageHeader&lt;/code&gt;'s content and the &lt;code&gt;DynamicPage&lt;/code&gt;'s content
are aligned vertically. When using {@link sap.ui.layout.form.Form},
{@link sap.m.Panel}, {@link sap.m.Table} and {@link sap.m.List} in the content area of
&lt;code&gt;DynamicPage&lt;/code&gt;, if the content is not already aligned, you need to adjust
their left text offset to achieve the vertical alignment. To do this, apply the
&lt;code&gt;sapFDynamicPageAlignContent&lt;/code&gt; CSS class to them and set their &lt;code&gt;width&lt;/code&gt;
property to &lt;code&gt;auto&lt;/code&gt; (if not set by default).

Example:

&lt;pre&gt;
&lt;code&gt; &amp;lt;Panel class=“sapFDynamicPageAlignContent” width=“auto”&amp;gt;&amp;lt;/Panel&amp;gt; &lt;/code&gt;
&lt;/pre&gt;

Please keep in mind that the alignment is not possible in the following cases:
&lt;ul&gt;
&lt;li&gt; When the controls are placed in an {@link sap.ui.layout.Grid} or other layout
controls that use &lt;code&gt;overflow:hidden&lt;/code&gt; CSS property&lt;/li&gt;
&lt;li&gt; In case any of the following CSS classes is applied to
&lt;code&gt;DynamicPage&lt;/code&gt;: &lt;code&gt;sapUiContentPadding&lt;/code&gt;,
&lt;code&gt;sapUiNoContentPadding&lt;/code&gt; or &lt;code&gt;sapUiResponsiveContentPadding&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="footer" minOccurs="0">
<xsd:annotation>
<xsd:documentation>&lt;code&gt;DynamicPage&lt;/code&gt; floating footer.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="landmarkInfo" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Accessible landmark settings to be applied on the containers of the &lt;code&gt;sap.f.DynamicPage&lt;/code&gt; control.

If not set, no landmarks will be written.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:DynamicPageAccessibleLandmarkInfo"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="preserveHeaderStateOnScroll" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Preserves the current header state when scrolling.
For example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.

&lt;b&gt;Note:&lt;/b&gt; Based on internal rules, the value of the property is not always taken into account - for example,
when the control is rendered on tablet or mobile and the control`s title and header
are with height larger than the given threshold.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="headerExpanded" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the header is expanded.

The header can be also expanded/collapsed by user interaction,
which requires the property to be internally mutated by the control to reflect the changed state.

&lt;b&gt;Note:&lt;/b&gt; As of version 1.48, you can initialize the control in collapsed header state by setting this property to &lt;code&gt;false&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="toggleHeaderOnTitleClick" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the user can switch between the expanded/collapsed states of the
&lt;code&gt;DynamicPageHeader&lt;/code&gt; by clicking on the &lt;code&gt;DynamicPageTitle&lt;/code&gt;
or by using the expand/collapse visual indicators,
positioned at the bottom of the &lt;code&gt;DynamicPageTitle&lt;/code&gt; and the &lt;code&gt;DynamicPageHeader&lt;/code&gt;.
If set to &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;DynamicPageTitle&lt;/code&gt; is not clickable,
the visual indicators are not available and the application
must provide other means for expanding/collapsing the &lt;code&gt;DynamicPageHeader&lt;/code&gt;, if necessary.

&lt;b&gt;Note: &lt;/b&gt; This property is taken into account only if a non-empty &lt;code&gt;header&lt;/code&gt; aggregation is provided.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showFooter" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the footer is visible.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="fitContent" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Optimizes &lt;code&gt;DynamicPage&lt;/code&gt; responsiveness on small screens and behavior
when expanding/collapsing the &lt;code&gt;DynamicPageHeader&lt;/code&gt;.

&lt;b&gt;Note:&lt;/b&gt; It is recommended to use this property when displaying content
of adaptive controls that stretch to fill the available space. Such controls may be
{@link sap.ui.table.Table} and {@link sap.ui.table.AnalyticalTable} depending on their settings.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="stickySubheaderProvider" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Association of Controls / IDs, that provide sticky subheader content. All controls
that provide this content have to implement the
&lt;code&gt;sap.f.IDynamicPageStickyContent&lt;/code&gt; interface.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.DynamicPageAccessibleLandmarkInfo'-->
<xsd:complexType name="_DynamicPageAccessibleLandmarkInfoType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="rootRole" type="n0:_AccessibleLandmarkRoleType">
<xsd:annotation>
<xsd:documentation>Landmark role of the root container of the corresponding &lt;code&gt;sap.f.DynamicPage&lt;/code&gt; control.

If set to &lt;code&gt;sap.ui.core.AccessibleLandmarkRole.None&lt;/code&gt;, no landmark will be added to the container.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="rootLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Texts which describe the landmark of the root container of the corresponding &lt;code&gt;sap.f.DynamicPage&lt;/code&gt; control.

If not set (and a landmark different than &lt;code&gt;sap.ui.core.AccessibleLandmarkRole.None&lt;/code&gt; is defined), no label is set.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="contentRole" type="n0:_AccessibleLandmarkRoleType">
<xsd:annotation>
<xsd:documentation>Landmark role of the content container of the corresponding &lt;code&gt;sap.f.DynamicPage&lt;/code&gt; control.

If set to &lt;code&gt;sap.ui.core.AccessibleLandmarkRole.None&lt;/code&gt;, no landmark will be added to the container.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="contentLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Texts which describe the landmark of the content container of the corresponding &lt;code&gt;sap.f.DynamicPage&lt;/code&gt; control.

If not set (and a landmark different than &lt;code&gt;sap.ui.core.AccessibleLandmarkRole.None&lt;/code&gt; is defined), no label is set.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="headerRole" type="n0:_AccessibleLandmarkRoleType">
<xsd:annotation>
<xsd:documentation>Landmark role of the header container of the corresponding &lt;code&gt;sap.f.DynamicPage&lt;/code&gt; control.

If set to &lt;code&gt;sap.ui.core.AccessibleLandmarkRole.None&lt;/code&gt;, no landmark will be added to the container.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="headerLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Texts which describe the landmark of the header container of the corresponding &lt;code&gt;sap.f.DynamicPage&lt;/code&gt; control.

If not set (and a landmark different than &lt;code&gt;sap.ui.core.AccessibleLandmarkRole.None&lt;/code&gt; is defined), no label is set.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="footerRole" type="n0:_AccessibleLandmarkRoleType">
<xsd:annotation>
<xsd:documentation>Landmark role of the footer container of the corresponding &lt;code&gt;sap.f.DynamicPage&lt;/code&gt; control.

If set to &lt;code&gt;sap.ui.core.AccessibleLandmarkRole.None&lt;/code&gt;, no landmark will be added to the container.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="footerLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Texts which describe the landmark of the header container of the corresponding &lt;code&gt;sap.f.DynamicPage&lt;/code&gt; control.

If not set (and a landmark different than &lt;code&gt;sap.ui.core.AccessibleLandmarkRole.None&lt;/code&gt; is defined), no label is set.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.DynamicPageHeader'-->
<xsd:complexType name="_DynamicPageHeaderType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'content'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
<xsd:element name="content" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The content of the header.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="pinnable" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the header is pinnable.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="backgroundDesign" type="n3:_BackgroundDesignType">
<xsd:annotation>
<xsd:documentation>Determines the background color of the &lt;code&gt;DynamicPageHeader&lt;/code&gt;.

&lt;b&gt;Note:&lt;/b&gt; The default value of &lt;code&gt;backgroundDesign&lt;/code&gt; property is null.
If the property is not set, the color of the background is &lt;code&gt;@sapUiObjectHeaderBackground&lt;/code&gt;,
which depends on the specific theme.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.DynamicPageTitle'-->
<xsd:complexType name="_DynamicPageTitleType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="heading" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The &lt;code&gt;heading&lt;/code&gt; is positioned in the &lt;code&gt;DynamicPageTitle&lt;/code&gt; left area
and is displayed in both expanded and collapsed (snapped) states of the header.
Use this aggregation to display a title (or any other UI5 control that serves
as a heading) that has to be present in both expanded and collapsed states of the header.

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;heading&lt;/code&gt; is mutually exclusive with &lt;code&gt;snappedHeading&lt;/code&gt;
and &lt;code&gt;expandedHeading&lt;/code&gt;. If &lt;code&gt;heading&lt;/code&gt; is provided, both
&lt;code&gt;snappedHeading&lt;/code&gt; and &lt;code&gt;expandedHeading&lt;/code&gt; are ignored.
&lt;code&gt;heading&lt;/code&gt; is useful when the content of &lt;code&gt;snappedHeading&lt;/code&gt; and
&lt;code&gt;expandedHeading&lt;/code&gt; needs to be the same as it replaces them both.&lt;/li&gt;
&lt;li&gt;If the &lt;code&gt;snappedTitleOnMobile&lt;/code&gt; aggregation is set, its content
overrides this aggregation when the control is viewed on a phone mobile device and
the &lt;code&gt;DynamicPageHeader&lt;/code&gt; is in its collapsed (snapped) state.&lt;/li&gt;
&lt;/ul&gt;</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="snappedHeading" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The &lt;code&gt;snappedHeading&lt;/code&gt; is positioned in the &lt;code&gt;DynamicPageTitle&lt;/code&gt; left area
and is displayed when the header is in collapsed (snapped) state only.
Use this aggregation to display a title (or any other UI5 control that serves
as a heading) that has to be present in collapsed state only.

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;In order for &lt;code&gt;snappedHeading&lt;/code&gt; to be taken into account,
&lt;code&gt;heading&lt;/code&gt; has to be empty. Combine &lt;code&gt;snappedHeading&lt;/code&gt; with
&lt;code&gt;expandedHeading&lt;/code&gt; to switch content when the header switches state.&lt;/li&gt;
&lt;li&gt;If the &lt;code&gt;snappedTitleOnMobile&lt;/code&gt; aggregation is set, its content
overrides this aggregation when the control is viewed on a phone mobile device and
the &lt;code&gt;DynamicPageHeader&lt;/code&gt; is in its collapsed (snapped) state.&lt;/li&gt;
&lt;/ul&gt;</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="expandedHeading" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The &lt;code&gt;expandedHeading&lt;/code&gt; is positioned in the &lt;code&gt;DynamicPageTitle&lt;/code&gt; left area
and is displayed when the header is in expanded state only.
Use this aggregation to display a title (or any other UI5 control that serves
as a heading) that has to be present in expanded state only.

&lt;b&gt;Note:&lt;/b&gt; In order for &lt;code&gt;expandedHeading&lt;/code&gt; to be taken into account,
&lt;code&gt;heading&lt;/code&gt; has to be empty. Combine &lt;code&gt;expandedHeading&lt;/code&gt; with
&lt;code&gt;snappedHeading&lt;/code&gt; to switch content when the header switches state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="actions" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The &lt;code&gt;DynamicPageTitle&lt;/code&gt; actions.
&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;actions&lt;/code&gt; aggregation accepts any UI5 control, but it`s recommended to use controls,
suitable for {@link sap.m.Toolbar} and {@link sap.m.OverflowToolbar}.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;snappedTitleOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;DynamicPageHeader&lt;/code&gt; is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="navigationActions" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The &lt;code&gt;DynamicPageTitle&lt;/code&gt; navigation actions.

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;navigationActions&lt;/code&gt; position depends on the control size.
If the control size is 1280px or bigger, they are rendered right next to the
&lt;code&gt;actions&lt;/code&gt;. Otherwise, they are rendered in the top-right area, above the
&lt;code&gt;actions&lt;/code&gt;. If a large number of elements(buttons) are used, there could
be visual degradations as the space for the &lt;code&gt;navigationActions&lt;/code&gt; is
limited.&lt;/li&gt;
&lt;li&gt;If the &lt;code&gt;snappedTitleOnMobile&lt;/code&gt; aggregation is set, its content
overrides this aggregation when the control is viewed on a phone mobile device and
the &lt;code&gt;DynamicPageHeader&lt;/code&gt; is in its collapsed (snapped) state.&lt;/li&gt;
&lt;/ul&gt;</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:Button"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="content" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The content is positioned in the &lt;code&gt;DynamicPageTitle&lt;/code&gt; middle area
and displayed in both expanded and collapsed (snapped) states.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;snappedTitleOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;DynamicPageHeader&lt;/code&gt; is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="snappedContent" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The content that is displayed in the &lt;code&gt;DynamicPageTitle&lt;/code&gt; in collapsed (snapped) state.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;snappedTitleOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;DynamicPageHeader&lt;/code&gt; is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="expandedContent" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The content that is displayed in the &lt;code&gt;DynamicPageTitle&lt;/code&gt; in expanded state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="snappedTitleOnMobile" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The only content that is displayed in the &lt;code&gt;DynamicPageTitle&lt;/code&gt;
when it is viewed on a phone mobile device and the &lt;code&gt;DynamicPageHeader&lt;/code&gt;
is in collapsed (snapped) state.

Using this aggregation enables you to provide a simple, single-line title that
takes less space on the smaller phone screens when the
&lt;code&gt;DynamicPageHeader&lt;/code&gt; is in its collapsed (snapped) state.

&lt;b&gt;Note:&lt;/b&gt; The content set in this aggregation overrides all the other
&lt;code&gt;DynamicPageTitle&lt;/code&gt; aggregations and is only visible on phone mobile
devices in collapsed (snapped) state of the &lt;code&gt;DynamicPageHeader&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:Title"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="breadcrumbs" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The breadcrumbs displayed in the &lt;code&gt;DynamicPageTitle&lt;/code&gt; top-left area.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="primaryArea" type="n4:_DynamicPageTitleAreaType">
<xsd:annotation>
<xsd:documentation>Determines which of the &lt;code&gt;DynamicPageTitle&lt;/code&gt; areas (Begin, Middle) is primary.

&lt;b&gt;Note:&lt;/b&gt; The primary area is shrinking at lower rate, remaining visible as much as it can.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="areaShrinkRatio" type="n4:_DynamicPageTitleShrinkRatioType">
<xsd:annotation>
<xsd:documentation>Assigns shrinking ratio to the &lt;code&gt;DynamicPageTitle&lt;/code&gt; areas (Heading, Content, Actions).
The greater value a section has the faster it shrinks when the screen size is being reduced.

The value must be set in &lt;code&gt;Heading:Content:Actions&lt;/code&gt; format where Title, Content and Actions
are numbers greater than or equal to 0. If set to 0, the respective area will not shrink.

For example, if &lt;code&gt;2:7:1&lt;/code&gt; is set, the Content area will shrink seven times faster than
the Actions area. So, when all three areas have width of 500px and the available space is reduced by 100px
the Title area will reduced by 20px, the Content area - by 70px and the Actions area - by 10px.

If all the areas have assigned values greater than 1, the numbers are scaled so that at least one of them
is equal to 1. For example, value of &lt;code&gt;2:4:8&lt;/code&gt; is equal to &lt;code&gt;1:2:4&lt;/code&gt;.

&lt;Note:&gt; When this property is set the &lt;code&gt;primaryArea&lt;/code&gt; property has no effect.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="backgroundDesign" type="n3:_BackgroundDesignType">
<xsd:annotation>
<xsd:documentation>Determines the background color of the &lt;code&gt;DynamicPageTitle&lt;/code&gt;.

&lt;b&gt;Note:&lt;/b&gt; The default value of &lt;code&gt;backgroundDesign&lt;/code&gt; property is null.
If the property is not set, the color of the background is &lt;code&gt;@sapUiObjectHeaderBackground&lt;/code&gt;,
which depends on the specific theme.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="stateChange" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fired when the title state (expanded/collapsed) is toggled by user interaction.
For example, scrolling, title clicking/tapping, using expand/collapse button.

Also fired when the developer toggles the title state by programmatically
changing the scroll position of the scrollbar of &lt;code&gt;DynamicPage&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.FlexibleColumnLayout'-->
<xsd:complexType name="_FlexibleColumnLayoutType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="beginColumnPages" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The content entities between which the &lt;code&gt;FlexibleColumnLayout&lt;/code&gt; navigates in the &lt;code&gt;Begin&lt;/code&gt; column.

These should be any control with page semantics.
These aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="midColumnPages" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The content entities between which the &lt;code&gt;FlexibleColumnLayout&lt;/code&gt; navigates in the &lt;code&gt;Mid&lt;/code&gt; column.

These should be any control with page semantics.
These aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="endColumnPages" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The content entities between which the &lt;code&gt;FlexibleColumnLayout&lt;/code&gt; navigates in the &lt;code&gt;End&lt;/code&gt; column.

These should be any control with page semantics.
These aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="layout" type="n4:_LayoutTypeType">
<xsd:annotation>
<xsd:documentation>Determines the layout of the control - number of visible columns and their relative sizes.

For more details, see {@link topic:3b9f760da5b64adf8db7f95247879086 Types of Layout} in the documentation.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="defaultTransitionNameBeginColumn" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Determines the type of the transition/animation to apply for the &lt;code&gt;Begin&lt;/code&gt; column when &lt;code&gt;to()&lt;/code&gt; is called without defining the
transition to use. The default is &lt;code&gt;slide&lt;/code&gt;, other options are &lt;code&gt;fade&lt;/code&gt;, &lt;code&gt;flip&lt;/code&gt;, &lt;code&gt;show&lt;/code&gt;, and the names of any registered custom transitions.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="defaultTransitionNameMidColumn" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Determines the type of the transition/animation to apply for the &lt;code&gt;Mid&lt;/code&gt; column when &lt;code&gt;to()&lt;/code&gt; is called without defining the
transition to use. The default is &lt;code&gt;slide&lt;/code&gt;, other options are &lt;code&gt;fade&lt;/code&gt;, &lt;code&gt;flip&lt;/code&gt;, &lt;code&gt;show&lt;/code&gt;, and the names of any registered custom transitions.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="defaultTransitionNameEndColumn" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Determines the type of the transition/animation to apply for the &lt;code&gt;End&lt;/code&gt; column when &lt;code&gt;to()&lt;/code&gt; is called without defining the
transition to use. The default is &lt;code&gt;slide&lt;/code&gt;, other options are &lt;code&gt;fade&lt;/code&gt;, &lt;code&gt;flip&lt;/code&gt;, &lt;code&gt;show&lt;/code&gt;, and the names of any registered custom transitions.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="backgroundDesign" type="n3:_BackgroundDesignType">
<xsd:annotation>
<xsd:documentation>Specifies the background color of the content. The visualization of the different options depends on the used theme.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="initialBeginColumnPage" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Sets the initial &lt;code&gt;Begin&lt;/code&gt; column page, which is displayed on application launch.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="initialMidColumnPage" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Sets the initial &lt;code&gt;Mid&lt;/code&gt; column page, which is displayed on application launch.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="initialEndColumnPage" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Sets the initial &lt;code&gt;End&lt;/code&gt; column page, which is displayed on application launch.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="stateChange" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fired when there is a change in the &lt;code&gt;layout&lt;/code&gt; property or in the maximum number of columns that can be displayed at once.
&lt;br/&gt;&lt;/br&gt;
&lt;ul&gt;The interactions that may lead to a state change are:
 &lt;li&gt;the property &lt;code&gt;layout&lt;/code&gt; was changed indirectly by the user clicking a layout arrow&lt;/li&gt;
 &lt;li&gt;the user resized the browser beyond a breakpoint, thus changing the maximum number of columns that can be displayed at once.&lt;/li&gt;&lt;/ul&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Note: &lt;/b&gt;The event is suppressed while the control has zero width and will be fired the first time it gets a non-zero width</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="beginColumnNavigate" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fires when navigation between two pages in the &lt;code&gt;Begin&lt;/code&gt; column has been triggered. The transition (if any) to the new page has not started yet.
This event can be aborted by the application with preventDefault(), which means that there will be no navigation.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="afterBeginColumnNavigate" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fires when navigation between two pages in the &lt;code&gt;Begin&lt;/code&gt; column has completed.

NOTE: In case of animated transitions this event is fired with some delay after the navigate event.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="midColumnNavigate" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fires when navigation between two pages in the &lt;code&gt;Mid&lt;/code&gt; column has been triggered. The transition (if any) to the new page has not started yet.
This event can be aborted by the application with preventDefault(), which means that there will be no navigation.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="afterMidColumnNavigate" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fires when navigation between two pages in the &lt;code&gt;Mid&lt;/code&gt; column has completed.

NOTE: In case of animated transitions this event is fired with some delay after the navigate event.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="endColumnNavigate" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fires when navigation between two pages in the &lt;code&gt;End&lt;/code&gt; column has been triggered. The transition (if any) to the new page has not started yet.
This event can be aborted by the application with preventDefault(), which means that there will be no navigation.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="afterEndColumnNavigate" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fires when navigation between two pages in the &lt;code&gt;End&lt;/code&gt; column has completed.

NOTE: In case of animated transitions this event is fired with some delay after the navigate event.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.GridContainer'-->
<xsd:complexType name="_GridContainerType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'items'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
<xsd:element name="items" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The items contained by the control.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="layout" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The sap.f.GridContainerSettings applied if no settings are provided for a specific size
If no layout is given, a default layout will be used. See the default values for &lt;code&gt;sap.f.GridContainerSettings&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:GridContainerSettings"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="layoutS" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The sap.f.GridContainerSettings applied for size "S"</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:GridContainerSettings"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="layoutM" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The sap.f.GridContainerSettings applied for size "M"</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:GridContainerSettings"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="layoutL" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The sap.f.GridContainerSettings applied for size "L"</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:GridContainerSettings"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="layoutXL" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The sap.f.GridContainerSettings applied for size "XL"</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:GridContainerSettings"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>Defines the width of the control</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>Defines the height of the control</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="snapToRow" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Should the items stretch to fill the rows which they occupy, or not.
If set to true the items will stretch.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.GridContainerItemLayoutData'-->
<xsd:complexType name="_GridContainerItemLayoutDataType">
<xsd:complexContent>
<xsd:extension base="n0:_LayoutDataType">
<xsd:attribute name="columns" type="xsd:int">
<xsd:annotation>
<xsd:documentation>Specifies the number of columns, which the item should take</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="minRows" type="xsd:int">
<xsd:annotation>
<xsd:documentation>Specifies the minimum number of rows, which the item should take.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="rows" type="xsd:int">
<xsd:annotation>
<xsd:documentation>Specifies the number of rows, which the item should take.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.GridContainerSettings'-->
<xsd:complexType name="_GridContainerSettingsType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:attribute name="columns" type="xsd:string">
<xsd:annotation>
<xsd:documentation>How many columns to have on a row.
If not defined, &lt;code&gt;sap.f.GridContainer&lt;/code&gt; will position as many columns as they can fit in the container.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="columnSize" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The width of the columns.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="rowSize" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The height of the rows.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="gap" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The size of the gap between columns and rows.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.GridList'-->
<xsd:complexType name="_GridListType">
<xsd:complexContent>
<xsd:extension base="n3:_ListBaseType">
<xsd:sequence>
<xsd:element name="customLayout" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Defines a custom grid layout</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n1:GridLayoutBase"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.ShellBar'-->
<xsd:complexType name="_ShellBarType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="menu" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The menu attached to the main title.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:Menu"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="profile" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The profile avatar.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:Avatar"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="additionalContent" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Additional content to be displayed in the control.

&lt;b&gt;Note:&lt;/b&gt; Only controls implementing the &lt;code&gt;{@link sap.f.IShellBar}&lt;/code&gt; interface are allowed.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Defines the main title of the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="secondTitle" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Defines the secondary title of the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="homeIcon" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>Defines the URI to the home icon, such as company or product logo.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showMenuButton" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether a hamburger menu button is displayed (as an alternative
if the &lt;code&gt;menu&lt;/code&gt; aggregation is not used).</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showNavButton" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether a back navigation button is displayed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showCopilot" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the SAP CoPilot icon is displayed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showSearch" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the search button is displayed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showNotifications" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the notifications button is displayed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showProductSwitcher" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the product switcher button is displayed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="notificationsNumber" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Defines the displayed number of upcoming notifications.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="homeIconPressed" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fired when the &lt;code&gt;homeIcon&lt;/code&gt; is pressed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="menuButtonPressed" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fired when the alternative menu button is pressed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="navButtonPressed" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fired when the navigation/back button is pressed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="copilotPressed" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fired when the SAP CoPilot icon is pressed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="searchButtonPressed" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fired when the search button is pressed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="notificationsPressed" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fired when the notifications button is pressed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="productSwitcherPressed" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fired when the product switcher button is pressed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="avatarPressed" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fired when the profile avatar is pressed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.cards.Header'-->
<xsd:complexType name="_HeaderType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence/>
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Defines the title.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="subtitle" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Defines the subtitle.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="statusText" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Defines the status text.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="iconDisplayShape" type="n4:_AvatarShapeType">
<xsd:annotation>
<xsd:documentation>Defines the shape of the icon.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="iconSrc" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>Defines the icon source.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="iconInitials" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Defines the initials of the icon.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fires when the user presses the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.cards.NumericHeader'-->
<xsd:complexType name="_NumericHeaderType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="sideIndicators" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Additional side number indicators. For example "Deviation" and "Target". Not more than two side indicators should be used.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n4:NumericSideIndicator"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The title of the card</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="subtitle" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The subtitle of the card</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="unitOfMeasurement" type="xsd:string">
<xsd:annotation>
<xsd:documentation>General unit of measurement for the header. Displayed as side information to the subtitle.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="number" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The numeric value of the main number indicator.
If the value contains more than five characters, only the first five are displayed. Without rounding the number.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="scale" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Defines the unit of measurement (scaling prefix) for the main indicator.
Financial characters can be used for currencies and counters. The International System of Units (SI) prefixes can be used.
If the unit contains more than three characters, only the first three characters are displayed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="trend" type="n3:_DeviationIndicatorType">
<xsd:annotation>
<xsd:documentation>The direction of the trend arrow. Shows deviation for the value of the main number indicator.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="state" type="n3:_ValueColorType">
<xsd:annotation>
<xsd:documentation>The semantic color which represents the state of the main number indicator.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="details" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Additional text which adds more details to what is shown in the numeric header.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fires when the user presses the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.cards.NumericSideIndicator'-->
<xsd:complexType name="_NumericSideIndicatorType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence/>
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The title of the indicator</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="number" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The numeric value</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="unit" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Defines the unit of measurement (scaling prefix) for the numeric value</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.AddAction'-->
<xsd:complexType name="_AddActionType">
<xsd:complexContent>
<xsd:extension base="n4:_SemanticButtonType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.CloseAction'-->
<xsd:complexType name="_CloseActionType">
<xsd:complexContent>
<xsd:extension base="n4:_SemanticButtonType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.CopyAction'-->
<xsd:complexType name="_CopyActionType">
<xsd:complexContent>
<xsd:extension base="n4:_SemanticButtonType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.DeleteAction'-->
<xsd:complexType name="_DeleteActionType">
<xsd:complexContent>
<xsd:extension base="n4:_SemanticButtonType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.DiscussInJamAction'-->
<xsd:complexType name="_DiscussInJamActionType">
<xsd:complexContent>
<xsd:extension base="n4:_SemanticButtonType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.EditAction'-->
<xsd:complexType name="_EditActionType">
<xsd:complexContent>
<xsd:extension base="n4:_SemanticButtonType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.ExitFullScreenAction'-->
<xsd:complexType name="_ExitFullScreenActionType">
<xsd:complexContent>
<xsd:extension base="n4:_SemanticButtonType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.FavoriteAction'-->
<xsd:complexType name="_FavoriteActionType">
<xsd:complexContent>
<xsd:extension base="n4:_SemanticToggleButtonType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.FlagAction'-->
<xsd:complexType name="_FlagActionType">
<xsd:complexContent>
<xsd:extension base="n4:_SemanticToggleButtonType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.FooterMainAction'-->
<xsd:complexType name="_FooterMainActionType">
<xsd:complexContent>
<xsd:extension base="n4:_MainActionType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.FullScreenAction'-->
<xsd:complexType name="_FullScreenActionType">
<xsd:complexContent>
<xsd:extension base="n4:_SemanticButtonType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.MainAction'-->
<xsd:complexType name="_MainActionType">
<xsd:complexContent>
<xsd:extension base="n4:_SemanticButtonType">
<xsd:attribute name="text" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Defines &lt;code&gt;MainAction&lt;/code&gt; text</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.MessagesIndicator'-->
<xsd:complexType name="_MessagesIndicatorType">
<xsd:complexContent>
<xsd:extension base="n4:_SemanticButtonType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.NegativeAction'-->
<xsd:complexType name="_NegativeActionType">
<xsd:complexContent>
<xsd:extension base="n4:_SemanticButtonType">
<xsd:attribute name="text" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Defines &lt;code&gt;NegativeAction&lt;/code&gt; text.
&lt;b&gt;Note:&lt;/b&gt; the default text is "Reject"</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.PositiveAction'-->
<xsd:complexType name="_PositiveActionType">
<xsd:complexContent>
<xsd:extension base="n4:_SemanticButtonType">
<xsd:attribute name="text" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Defines &lt;code&gt;PositiveAction&lt;/code&gt; text.
&lt;b&gt;Note:&lt;/b&gt; the default text is "Accept"</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.PrintAction'-->
<xsd:complexType name="_PrintActionType">
<xsd:complexContent>
<xsd:extension base="n4:_SemanticButtonType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.SemanticButton'-->
<xsd:complexType name="_SemanticButtonType">
<xsd:complexContent>
<xsd:extension base="n4:_SemanticControlType">
<xsd:attribute name="enabled" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the &lt;code&gt;SemanticButton&lt;/code&gt; is enabled.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fired when the user selects the &lt;code&gt;SemanticButton&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.SemanticControl'-->
<xsd:complexType name="_SemanticControlType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:sequence/>
<xsd:attribute name="visible" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the &lt;code&gt;SemanticControl&lt;/code&gt; is visible.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.SemanticPage'-->
<xsd:complexType name="_SemanticPageType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'content'-->
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
<xsd:element name="titleHeading" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The &lt;code&gt;SemanticPage&lt;/code&gt; heading.

A typical usage is the &lt;code&gt;sap.m.Title&lt;/code&gt; or any other UI5 control,
that serves as a heading for an object.

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The control will be placed in the title`s leftmost area.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;titleHeading&lt;/code&gt; is mutually exclusive with &lt;code&gt;titleSnappedHeading&lt;/code&gt;
and &lt;code&gt;titleExpandedHeading&lt;/code&gt;. If &lt;code&gt;titleHeading&lt;/code&gt; is provided, both
&lt;code&gt;titleSnappedHeading&lt;/code&gt; and &lt;code&gt;titleExpandedHeading&lt;/code&gt; are ignored.
&lt;code&gt;titleHeading&lt;/code&gt; is useful when the content of &lt;code&gt;titleSnappedHeading&lt;/code&gt; and
&lt;code&gt;titleExpandedHeading&lt;/code&gt; needs to be the same as it replaces them both.&lt;/li&gt;
&lt;li&gt;If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its content
overrides this aggregation when the control is viewed on a phone mobile device and
the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.&lt;/li&gt;
&lt;/ul&gt;</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="titleExpandedHeading" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The &lt;code&gt;titleExpandedHeading&lt;/code&gt; is positioned in the &lt;code&gt;SemanticPage&lt;/code&gt; title left area
and is displayed when the header is in expanded state only.
Use this aggregation to display a title (or any other UI5 control that serves
as a heading) that has to be present in expanded state only.

&lt;b&gt;Note:&lt;/b&gt; In order for &lt;code&gt;titleExpandedHeading&lt;/code&gt; to be taken into account,
&lt;code&gt;titleHeading&lt;/code&gt; has to be empty. Combine &lt;code&gt;titleExpandedHeading&lt;/code&gt; with
&lt;code&gt;titleSnappedHeading&lt;/code&gt; to switch content when the header switches state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="titleSnappedHeading" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The &lt;code&gt;titleSnappedHeading&lt;/code&gt; is positioned in the &lt;code&gt;SemanticPage&lt;/code&gt; title left area
and is displayed when the header is in collapsed (snapped) state only.
Use this aggregation to display a title (or any other UI5 control that serves
as a heading) that has to be present in collapsed state only.

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;In order for &lt;code&gt;titleSnappedHeading&lt;/code&gt; to be taken into account,
&lt;code&gt;titleHeading&lt;/code&gt; has to be empty. Combine &lt;code&gt;titleSnappedHeading&lt;/code&gt; with
&lt;code&gt;titleExpandedHeading&lt;/code&gt; to switch content when the header switches state.&lt;/li&gt;
&lt;li&gt;If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its content
overrides this aggregation when the control is viewed on a phone mobile device and
the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.&lt;/li&gt;
&lt;/ul&gt;</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="titleBreadcrumbs" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The &lt;code&gt;SemanticPage&lt;/code&gt; breadcrumbs.

A typical usage is the &lt;code&gt;sap.m.Breadcrumbs&lt;/code&gt; control or any other UI5 control,
that implements the &lt;code&gt;sap.m.IBreadcrumbs&lt;/code&gt; interface.

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The control will be placed in the title`s top-left area.&lt;/li&gt;
&lt;li&gt;If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its content
overrides this aggregation when the control is viewed on a phone mobile device and
the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.&lt;/li&gt;
&lt;/ul&gt;</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="titleSnappedOnMobile" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The only content that is displayed in the &lt;code&gt;SemanticPage&lt;/code&gt; title
when it is viewed on a phone mobile device and the &lt;code&gt;SemanticPage&lt;/code&gt; header
is in collapsed (snapped) state.

Using this aggregation enables you to provide a simple, single-line title that
takes less space on the smaller phone screens when the
&lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.

&lt;b&gt;Note:&lt;/b&gt; The content set in this aggregation overrides all the other
&lt;code&gt;SemanticPage&lt;/code&gt; aggregations displayed in the title and is only visible
on phone mobile devices in collapsed (snapped) state of the
&lt;code&gt;SemanticPage&lt;/code&gt; header.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:Title"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="titleSnappedContent" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The content, displayed in the title, when the header is in collapsed state.

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The controls will be placed in the title`s left area,
under the &lt;code&gt;titleHeading&lt;/code&gt; aggregation.&lt;/li&gt;
&lt;li&gt;If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.&lt;/li&gt;
&lt;/ul&gt;</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="titleExpandedContent" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The content,displayed in the title, when the header is in expanded state.

&lt;b&gt;Note:&lt;/b&gt; The controls will be placed in the title`s left area,
under the &lt;code&gt;titleHeading&lt;/code&gt; aggregation.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="titleContent" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The content, displayed in the title.

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The controls will be placed in the middle area.&lt;/li&gt;
&lt;li&gt;If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.&lt;/li&gt;
&lt;/ul&gt;</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="titleMainAction" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A semantic-specific button which is placed in the &lt;code&gt;SemanticPage&lt;/code&gt; title as first action.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:TitleMainAction"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="editAction" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A semantic-specific button which is placed in the &lt;code&gt;TextActions&lt;/code&gt; area of the &lt;code&gt;SemanticPage&lt;/code&gt; title.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:EditAction"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="deleteAction" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A semantic-specific button which is placed in the &lt;code&gt;TextActions&lt;/code&gt; area of the &lt;code&gt;SemanticPage&lt;/code&gt; title.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:DeleteAction"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="copyAction" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A semantic-specific button which is placed in the &lt;code&gt;TextActions&lt;/code&gt; area of the &lt;code&gt;SemanticPage&lt;/code&gt; title.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:CopyAction"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="addAction" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A semantic-specific button which is placed in the &lt;code&gt;TextActions&lt;/code&gt; area of the &lt;code&gt;SemanticPage&lt;/code&gt; title.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:AddAction"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="flagAction" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A semantic-specific button which is placed in the &lt;code&gt;IconActions&lt;/code&gt; area of the &lt;code&gt;SemanticPage&lt;/code&gt; title.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:FlagAction"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="favoriteAction" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A semantic-specific button which is placed in the &lt;code&gt;IconActions&lt;/code&gt; area of the &lt;code&gt;SemanticPage&lt;/code&gt; title.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:FavoriteAction"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="fullScreenAction" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A semantic-specific button which is placed in the &lt;code&gt;IconActions&lt;/code&gt; area of the &lt;code&gt;SemanticPage&lt;/code&gt; title.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:FullScreenAction"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="exitFullScreenAction" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A semantic-specific button which is placed in the &lt;code&gt;IconActions&lt;/code&gt; area of the &lt;code&gt;SemanticPage&lt;/code&gt; title.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:ExitFullScreenAction"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="closeAction" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A semantic-specific button which is placed in the &lt;code&gt;IconActions&lt;/code&gt; area of the &lt;code&gt;SemanticPage&lt;/code&gt; title.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:CloseAction"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="titleCustomTextActions" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The &lt;code&gt;titleCustomTextActions&lt;/code&gt; are placed in the &lt;code&gt;TextActions&lt;/code&gt; area of the
&lt;code&gt;SemanticPage&lt;/code&gt; title, right before the semantic text action.

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.&lt;/li&gt;
&lt;li&gt;Buttons that are part of this aggregation will always have their &lt;code&gt;type&lt;/code&gt;
property set to &lt;code&gt;Transparent&lt;/code&gt; by design.&lt;/li&gt;
&lt;/ul&gt;</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:Button"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="titleCustomIconActions" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The &lt;code&gt;titleCustomIconActions&lt;/code&gt; are placed in the &lt;code&gt;IconActions&lt;/code&gt; area of the
&lt;code&gt;SemanticPage&lt;/code&gt; title, right before the semantic icon action.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:OverflowToolbarButton"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="headerContent" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The header content.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="content" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The &lt;code&gt;SemanticPage&lt;/code&gt; content.

&lt;b&gt;Note:&lt;/b&gt; The SAP Fiori Design guidelines require that the
&lt;code&gt;SemanticPage&lt;/code&gt;'s header content and the &lt;code&gt;SemanticPage&lt;/code&gt;'s content
are aligned vertically. When using {@link sap.ui.layout.form.Form},
 {@link sap.m.Panel}, {@link sap.m.Table} and {@link sap.m.List} in the content area of
&lt;code&gt;SemanticPage&lt;/code&gt;, if the content is not already aligned, you need to adjust
their left text offset to achieve the vertical alignment. To do this, apply the
&lt;code&gt;sapFSemanticPageAlignContent&lt;/code&gt; CSS class to them and set their &lt;code&gt;width&lt;/code&gt;
property to &lt;code&gt;auto&lt;/code&gt; (if not set by default).

Example:

&lt;pre&gt;
&lt;code&gt; &amp;lt;Panel class=“sapFSemanticPageAlignContent” width=“auto”&amp;gt;&amp;lt;/Panel&amp;gt; &lt;/code&gt;
&lt;/pre&gt;

Please keep in mind that the alignment is not possible when the controls are placed in
a {@link sap.ui.layout.Grid} or in other layout controls that use
&lt;code&gt;overflow:hidden&lt;/code&gt; CSS property.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="footerMainAction" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A semantic-specific button which is placed in the &lt;code&gt;FooterRight&lt;/code&gt; area of the &lt;code&gt;SemanticPage&lt;/code&gt;
footer with default text value set to &lt;code&gt;Save&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:FooterMainAction"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="messagesIndicator" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A semantic-specific button which is placed in the &lt;code&gt;FooterLeft&lt;/code&gt; area of the &lt;code&gt;SemanticPage&lt;/code&gt;
footer as a first action.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:MessagesIndicator"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="draftIndicator" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A semantic-specific button which is placed in the &lt;code&gt;FooterLeft&lt;/code&gt; area of the &lt;code&gt;SemanticPage&lt;/code&gt;
footer as a second action.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:DraftIndicator"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="positiveAction" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A semantic-specific button which is placed in the &lt;code&gt;FooterRight&lt;/code&gt; area of the &lt;code&gt;SemanticPage&lt;/code&gt;
footer with default text value set to &lt;code&gt;Accept&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:PositiveAction"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="negativeAction" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A semantic-specific button which is placed in the &lt;code&gt;FooterRight&lt;/code&gt; area of the &lt;code&gt;SemanticPage&lt;/code&gt;
footer with default text value set to &lt;code&gt;Reject&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:NegativeAction"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="footerCustomActions" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The &lt;code&gt;footerCustomActions&lt;/code&gt; are placed in the &lt;code&gt;FooterRight&lt;/code&gt; area of the
&lt;code&gt;SemanticPage&lt;/code&gt; footer, right after the semantic footer actions.

&lt;b&gt;Note:&lt;/b&gt; Buttons that are part of this aggregation will always have their &lt;code&gt;type&lt;/code&gt;
property set to &lt;code&gt;Transparent&lt;/code&gt; by design.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:Button"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="discussInJamAction" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A semantic-specific button which is placed in the &lt;code&gt;ShareMenu&lt;/code&gt; area of the &lt;code&gt;SemanticPage&lt;/code&gt; title.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:DiscussInJamAction"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="saveAsTileAction" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A button which is placed in the &lt;code&gt;ShareMenu&lt;/code&gt; area of the &lt;code&gt;SemanticPage&lt;/code&gt; title.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:Button"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="shareInJamAction" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A semantic-specific button which is placed in the &lt;code&gt;ShareMenu&lt;/code&gt; area of the &lt;code&gt;SemanticPage&lt;/code&gt; title.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:ShareInJamAction"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="sendMessageAction" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A semantic-specific button which is placed in the &lt;code&gt;ShareMenu&lt;/code&gt; area of the &lt;code&gt;SemanticPage&lt;/code&gt; title.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:SendMessageAction"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="sendEmailAction" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A semantic-specific button which is placed in the &lt;code&gt;ShareMenu&lt;/code&gt; area of the &lt;code&gt;SemanticPage&lt;/code&gt; title.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:SendEmailAction"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="printAction" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A semantic-specific button which is placed in the &lt;code&gt;ShareMenu&lt;/code&gt; area of the &lt;code&gt;SemanticPage&lt;/code&gt; title.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:PrintAction"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="customShareActions" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The &lt;code&gt;customShareActions&lt;/code&gt; are placed in the &lt;code&gt;ShareMenu&lt;/code&gt; area of the
&lt;code&gt;SemanticPage&lt;/code&gt; title, right after the semantic actions.

&lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;titleSnappedOnMobile&lt;/code&gt; aggregation is set, its
content overrides this aggregation when the control is viewed on a phone mobile
device and the &lt;code&gt;SemanticPage&lt;/code&gt; header is in its collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:Button"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="landmarkInfo" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Accessible landmark settings to be applied to the containers of the &lt;code&gt;sap.f.SemanticPage&lt;/code&gt; control.

If not set, no landmarks will be written.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n4:DynamicPageAccessibleLandmarkInfo"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="headerExpanded" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the header is expanded.

The header can be also expanded/collapsed by user interaction,
which requires the property to be internally mutated by the control to reflect the changed state.

&lt;b&gt;Note:&lt;/b&gt; Please be aware, that initially collapsed header state is not supported,
so &lt;code&gt;headerExpanded&lt;/code&gt; should not be set to &lt;code&gt;false&lt;/code&gt; when initializing the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="headerPinnable" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the header is pinnable.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="preserveHeaderStateOnScroll" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Preserves the current header state when scrolling.

For example, if the user expands the header by clicking on the title
and then scrolls down the page, the header will remain expanded.

&lt;b&gt;Note:&lt;/b&gt; Based on internal rules, the value of the property is not always taken into account - for example,
when the control is rendered on tablet or mobile and the title and the header
are with height larger than a given threshold.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="toggleHeaderOnTitleClick" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the user can switch between the expanded/collapsed states of the
header by clicking on the title.

If set to &lt;code&gt;false&lt;/code&gt;, the title is not clickable and the application
must provide other means for expanding/collapsing the header, if necessary.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showFooter" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the footer is visible.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="titlePrimaryArea" type="n4:_DynamicPageTitleAreaType">
<xsd:annotation>
<xsd:documentation>Determines which of the title areas (Begin, Middle) is primary.

&lt;b&gt;Note:&lt;/b&gt; The primary area is shrinking at a lower rate, remaining visible as long as it can.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="titleAreaShrinkRatio" type="n4:_DynamicPageTitleShrinkRatioType">
<xsd:annotation>
<xsd:documentation>Assigns shrinking ratio to the &lt;code&gt;SemanticPage&lt;/code&gt; title areas (Heading, Content, Actions).
The greater value a section has the faster it shrinks when the screen size is being reduced.

The value must be set in &lt;code&gt;Heading:Content:Actions&lt;/code&gt; format where Title, Content and Actions
are numbers greater than or equal to 0. If set to 0, the respective area will not shrink.

For example, if &lt;code&gt;2:7:1&lt;/code&gt; is set, the Content area will shrink seven times faster than
the Actions area. So, when all three areas have width of 500px and the available space is reduced by 100px
the Title area will be reduced by 20px, the Content area - by 70px and the Actions area - by 10px.

If all the areas have assigned values greater than 1, the numbers are scaled so that at least one of them
is equal to 1. For example, value of &lt;code&gt;2:4:8&lt;/code&gt; is equal to &lt;code&gt;1:2:4&lt;/code&gt;.

&lt;Note:&gt; When this property is set the &lt;code&gt;titlePrimaryArea&lt;/code&gt; property has no effect.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.SemanticToggleButton'-->
<xsd:complexType name="_SemanticToggleButtonType">
<xsd:complexContent>
<xsd:extension base="n4:_SemanticButtonType">
<xsd:attribute name="pressed" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Defines the &lt;code&gt;SemanticToggleButton&lt;/code&gt; pressed state.

The property is set to &lt;code&gt;true&lt;/code&gt; when the control is toggled (default is &lt;code&gt;false&lt;/code&gt;).</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.SendEmailAction'-->
<xsd:complexType name="_SendEmailActionType">
<xsd:complexContent>
<xsd:extension base="n4:_SemanticButtonType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.SendMessageAction'-->
<xsd:complexType name="_SendMessageActionType">
<xsd:complexContent>
<xsd:extension base="n4:_SemanticButtonType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.ShareInJamAction'-->
<xsd:complexType name="_ShareInJamActionType">
<xsd:complexContent>
<xsd:extension base="n4:_SemanticButtonType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.semantic.TitleMainAction'-->
<xsd:complexType name="_TitleMainActionType">
<xsd:complexContent>
<xsd:extension base="n4:_MainActionType"/>
</xsd:complexContent>
</xsd:complexType>
<xsd:simpleType name="_AvatarImageFitTypeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Cover">
<xsd:annotation>
<xsd:documentation>The image is scaled to be large enough so that the control area is completely covered.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Contain">
<xsd:annotation>
<xsd:documentation>The image is scaled to the largest size so that both its width and height can fit in the control area.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_AvatarShapeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Circle">
<xsd:annotation>
<xsd:documentation>Circular shape.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Square">
<xsd:annotation>
<xsd:documentation>Square shape.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_AvatarSizeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="XS">
<xsd:annotation>
<xsd:documentation>Control size - 2rem
Font size - 0.75rem</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="S">
<xsd:annotation>
<xsd:documentation>Control size - 3rem
Font size - 1.125rem</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="M">
<xsd:annotation>
<xsd:documentation>Control size - 4rem
Font size - 1.625rem</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="L">
<xsd:annotation>
<xsd:documentation>Control size - 5rem
Font size - 2rem</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="XL">
<xsd:annotation>
<xsd:documentation>Control size - 7rem
Font size - 2.75rem</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Custom">
<xsd:annotation>
<xsd:documentation>Custom size</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_AvatarTypeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Icon">
<xsd:annotation>
<xsd:documentation>The displayed content is an icon.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Image">
<xsd:annotation>
<xsd:documentation>The displayed content is an image.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Initials">
<xsd:annotation>
<xsd:documentation>The displayed content is initials.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_DynamicPageTitleAreaType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Begin">
<xsd:annotation>
<xsd:documentation>The area includes the &lt;code&gt;heading&lt;/code&gt;, &lt;code&gt;expandedContent&lt;/code&gt; and &lt;code&gt;snappedContent&lt;/code&gt; aggregations,
positioned in the beginning area of the {@link sap.f.DynamicPageTitle}.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Middle">
<xsd:annotation>
<xsd:documentation>The area includes the &lt;code&gt;content&lt;/code&gt; aggregation,
positioned in the middle part of the {@link sap.f.DynamicPageTitle}.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_DynamicPageTitleShrinkRatioType">
<xsd:restriction base="xsd:string">
<xsd:pattern value="([0-9]\d*)(\.\d)?:([0-9]\d*)(\.\d)?:([0-9]\d*)(\.\d)?"/>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_LayoutTypeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="OneColumn">
<xsd:annotation>
<xsd:documentation>Desktop: 100/-/-  only the Begin column is displayed

Tablet:  100/-/-  only the Begin column is displayed

Phone:   100/-/-  only the Begin column is displayed

Use to start with a master page.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="TwoColumnsBeginExpanded">
<xsd:annotation>
<xsd:documentation>Desktop: 67/33/-  Begin (expanded) and Mid columns are displayed

Tablet:  67/33/-  Begin (expanded) and Mid columns are displayed

Phone:   -/100/-  only the Mid column is displayed

Use to display both a master and a detail page when the user should focus on the master page.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="TwoColumnsMidExpanded">
<xsd:annotation>
<xsd:documentation>Desktop: 33/67/-  Begin and Mid (expanded) columns are displayed

Tablet:  33/67/-  Begin and Mid (expanded) columns are displayed

Phone:   -/100/-  only the Mid column is displayed

Use to display both a master and a detail page when the user should focus on the detail page.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="MidColumnFullScreen">
<xsd:annotation>
<xsd:documentation>Desktop: -/100/-  only the Mid column is displayed

Tablet:  -/100/-  only the Mid column is displayed

Phone:   -/100/-  only the Mid column is displayed

Use to display a detail page only, when the user should focus entirely on it.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="ThreeColumnsMidExpanded">
<xsd:annotation>
<xsd:documentation>Desktop: 25/50/25 Begin, Mid (expanded) and End columns are displayed

Tablet:  0/67/33  Mid (expanded) and End columns are displayed, Begin is accessible by a layout arrow

Phone:   -/-/100  only the End column is displayed

Use to display all three pages (master, detail, detail-detail) when the user should focus on the detail.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="ThreeColumnsEndExpanded">
<xsd:annotation>
<xsd:documentation>Desktop: 25/25/50 Begin, Mid and End (expanded) columns are displayed

Tablet:  0/33/67  Mid and End (expanded) columns are displayed, Begin is accessible by layout arrows

Phone:   -/-/100  (only the End column is displayed)

Use to display all three pages (master, detail, detail-detail) when the user should focus on the detail-detail.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="ThreeColumnsMidExpandedEndHidden">
<xsd:annotation>
<xsd:documentation>Desktop: 33/67/0  Begin and Mid (expanded) columns are displayed, End is accessible by a layout arrow

Tablet:  33/67/0  Begin and Mid (expanded) columns are displayed, End is accessible by a layout arrow

Phone:   -/-/100  only the End column is displayed

Use to display the master and detail pages when the user should focus on the detail.
The detail-detail is still loaded and easily accessible with a layout arrow.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="ThreeColumnsBeginExpandedEndHidden">
<xsd:annotation>
<xsd:documentation>Desktop: 67/33/0  Begin (expanded) and Mid columns are displayed, End is accessible by layout arrows

Tablet:  67/33/0  Begin (expanded) and Mid columns are displayed, End is accessible by layout arrows

Phone:   -/-/100  only the End column is displayed

Use to display the master and detail pages when the user should focus on the master.
The detail-detail is still loaded and easily accessible with layout arrows.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="EndColumnFullScreen">
<xsd:annotation>
<xsd:documentation>Desktop: -/-/100  only the End column is displayed

Tablet:  -/-/100  only the End column is displayed

Phone:   -/-/100  only the End column is displayed

Use to display a detail-detail page only, when the user should focus entirely on it.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_HeaderPositionType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Top">
<xsd:annotation>
<xsd:documentation>The Header is over the content.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Bottom">
<xsd:annotation>
<xsd:documentation>The Header is under the content.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:schema>
