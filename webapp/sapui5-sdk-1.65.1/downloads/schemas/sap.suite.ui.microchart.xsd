<?xml version="1.0" encoding="UTF-8"?><xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="sap.suite.ui.microchart" xmlns:n1="sap.ui.unified" xmlns:n2="sap.m" xmlns:n3="sap.suite.ui.microchart" xmlns:n0="sap.ui.core">
<xsd:import namespace="sap.ui.unified"/>
<xsd:import namespace="sap.m"/>
<xsd:import namespace="sap.ui.core"/>
<xsd:element name="AreaMicroChart" type="n3:_AreaMicroChartType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>&lt;br&gt;Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use &lt;code&gt;((AltText))&lt;/code&gt; inside of the tooltip string. The aggregated data of the microchart can also be customized.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="AreaMicroChartItem" type="n3:_AreaMicroChartItemType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>Graphical representation of the area micro chart regarding the value lines, the thresholds, and the target values.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="AreaMicroChartLabel" type="n3:_AreaMicroChartLabelType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>Displays or hides the labels for start and end dates, start and end values, and minimum and maximum values.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="AreaMicroChartPoint" type="n3:_AreaMicroChartPointType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>Contains the data for the point.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="BulletMicroChart" type="n3:_BulletMicroChartType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Displays a colored horizontal bar representing a current value on top of a background bar representing the compared value. The vertical bars can represent the numeric values, the scaling factors, the thresholds, and the target values.  This control replaces the deprecated sap.suite.ui.commons.BulletChart.
&lt;br&gt;Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use &lt;code&gt;((AltText))&lt;/code&gt; inside of the tooltip string. The aggregated data of the microchart can also be customized.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="BulletMicroChartData" type="n3:_BulletMicroChartDataType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>Contains the thresholds data.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ColumnMicroChart" type="n3:_ColumnMicroChartType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Compares different values which are represented as vertical bars. This control replaces the deprecated sap.suite.ui.commons.ColumnMicroChart.
&lt;br&gt;Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use &lt;code&gt;((AltText))&lt;/code&gt; inside of the tooltip string. The aggregated data of the microchart can also be customized.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ColumnMicroChartData" type="n3:_ColumnMicroChartDataType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>Defines the column chart data.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ColumnMicroChartLabel" type="n3:_ColumnMicroChartLabelType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>Displays or hides the labels of a column micro chart.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ComparisonMicroChart" type="n3:_ComparisonMicroChartType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Illustrates values as colored bar charts with title, numeric value, and scaling factor in the content area. This control replaces the deprecated sap.suite.ui.commons.ComparisonChart.
&lt;br&gt;Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use &lt;code&gt;((AltText))&lt;/code&gt; inside of the tooltip string. The aggregated data of the microchart can also be customized.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ComparisonMicroChartData" type="n3:_ComparisonMicroChartDataType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>Contains the values of the comparison chart.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="DeltaMicroChart" type="n3:_DeltaMicroChartType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Represents the delta of two values as a chart. This control replaces the deprecated sap.suite.ui.commons.DeltaMicroChart.
&lt;br&gt;Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use &lt;code&gt;((AltText))&lt;/code&gt; inside of the tooltip string.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="HarveyBallMicroChart" type="n3:_HarveyBallMicroChartType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>A radial chart that displays a value compared to its total.
&lt;br&gt;Unlike a pie chart, which shows multiple values or sectors, a Harvey Ball microchart shows only one value from a total.
&lt;br&gt;The sector that represents a value being compared to a total is defined by {@link sap.suite.ui.microchart.HarveyBallMicroChartItem}.
&lt;br&gt;Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use &lt;code&gt;((AltText))&lt;/code&gt; inside of the tooltip string. The aggregated data of the microchart can also be customized.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="HarveyBallMicroChartItem" type="n3:_HarveyBallMicroChartItemType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>Defines the fraction value that is compared with total in a {@link sap.suite.ui.microchart.HarveyBallMicroChart}.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="InteractiveBarChart" type="n3:_InteractiveBarChartType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>The InteractiveBarChart control belongs to a chart control group in the MicroChart library with a number of interactive features. These interactive features provide more information on a chart value.
For example, by selecting a bar you can get more details on the displayed value.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="InteractiveBarChartBar" type="n3:_InteractiveBarChartBarType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>A bar element for the InteractiveBarChart.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="InteractiveDonutChart" type="n3:_InteractiveDonutChartType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>The InteractiveDonutChart control belongs to a chart control group in the MicroChart library with a number of interactive features. These interactive features provide more information on a chart value.
For example, by selecting a segment you can get more details on the displayed value.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="InteractiveDonutChartSegment" type="n3:_InteractiveDonutChartSegmentType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>A donut chart segment.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="InteractiveLineChart" type="n3:_InteractiveLineChartType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>The InteractiveLineChart control belongs to a chart control group in the MicroChart library having a number of interactive features.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="InteractiveLineChartPoint" type="n3:_InteractiveLineChartPointType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>A point element for the InteractiveLineChart.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="LineMicroChart" type="n3:_LineMicroChartType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Chart that displays the history of values as segmented lines along a threshold line. The scale is optional and showing the points is also optional.
&lt;br&gt;Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use &lt;code&gt;((AltText))&lt;/code&gt; inside of the tooltip string.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="LineMicroChartEmphasizedPoint" type="n3:_LineMicroChartEmphasizedPointType" substitutionGroup="n3:LineMicroChartPoint">
<xsd:annotation>
<xsd:documentation>Contains the emphasized point of the line micro chart.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="LineMicroChartLine" type="n3:_LineMicroChartLineType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>The container containing all the points of the line.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="LineMicroChartPoint" type="n3:_LineMicroChartPointType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>Contains the point of the line micro chart.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="RadialMicroChart" type="n3:_RadialMicroChartType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Displays a ring chart highlighting a current status. The status is displayed with a semantically colored radial bar and a percentage value.
&lt;br&gt;Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use &lt;code&gt;((AltText))&lt;/code&gt; inside of the tooltip string.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="StackedBarMicroChart" type="n3:_StackedBarMicroChartType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Illustrates values as stacked and colored bar charts displaying numeric values (as absolute values or percentages) inside the bars.
&lt;br&gt;Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use &lt;code&gt;((AltText))&lt;/code&gt; inside of the tooltip string. The aggregated data of the microchart can also be customized.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="StackedBarMicroChartBar" type="n3:_StackedBarMicroChartBarType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>Contains the values of the stacked bar chart.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<!--type definition for UIElement 'sap.suite.ui.microchart.AreaMicroChart'-->
<xsd:complexType name="_AreaMicroChartType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'lines'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:AreaMicroChartItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="chart" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The configuration of the actual values line.
The color property defines the color of the line.
Points are rendered in the same sequence as in this aggregation.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:AreaMicroChartItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="maxThreshold" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The configuration of the max threshold area. The color property defines the color of the area above the max threshold line. Points are rendered in the same sequence as in this aggregation.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:AreaMicroChartItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="innerMaxThreshold" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The configuration of the upper line of the inner threshold area. The color property defines the color of the area between inner thresholds. For rendering of the inner threshold area, both innerMaxThreshold and innerMinThreshold aggregations must be defined. Points are rendered in the same sequence as in this aggregation.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:AreaMicroChartItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="innerMinThreshold" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The configuration of the bottom line of the inner threshold area. The color property is ignored. For rendering of the inner threshold area, both innerMaxThreshold and innerMinThreshold aggregations must be defined. Points are rendered in the same sequence as in this aggregation.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:AreaMicroChartItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="minThreshold" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The configuration of the min threshold area. The color property defines the color of the area below the min threshold line. Points are rendered in the same sequence as in this aggregation.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:AreaMicroChartItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="target" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The configuration of the target values line. The color property defines the color of the line. Points are rendered in the same sequence as in this aggregation.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:AreaMicroChartItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="firstXLabel" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The label on X axis for the first point of the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:AreaMicroChartLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="firstYLabel" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The label on Y axis for the first point of the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:AreaMicroChartLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="lastXLabel" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The label on X axis for the last point of the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:AreaMicroChartLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="lastYLabel" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The label on Y axis for the last point of the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:AreaMicroChartLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="maxLabel" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The label for the maximum point of the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:AreaMicroChartLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="minLabel" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The label for the minimum point of the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:AreaMicroChartLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="lines" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The set of lines.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:AreaMicroChartItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="size" type="n2:_SizeType">
<xsd:annotation>
<xsd:documentation>The size of the microchart. If not set, the default size is applied based on the size of the device tile.
Responsive size takes width and height of the parent container where the bullet micro chart is included.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The width of the chart. Overrides the width specified in the &lt;code&gt;size&lt;/code&gt; property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The height of the chart. Overrides the height specified in the &lt;code&gt;size&lt;/code&gt; property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="maxXValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>If this property is set, it indicates the value the X-axis ends with.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="minXValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>If this property is set it indicates the value X axis ends with.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="maxYValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>If this property is set it indicates the value X axis ends with.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="minYValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>If this property is set it indicates the value X axis ends with.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="view" type="n3:_AreaMicroChartViewTypeType">
<xsd:annotation>
<xsd:documentation>The view of the chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="colorPalette" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The color palette for the chart. If this property is set,
semantic colors defined in AreaMicroChartItem are ignored.
As a result, colors of the palette are assigned to each line.
When all the palette colors are used up, assignment of the colors starts again from the beginning of the palette.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showLabel" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines if the labels are displayed or not.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="isResponsive" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="ariaLabelledBy" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Controls or IDs that label this control. Can be used by screen reader software.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is triggered when the chart is pressed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.AreaMicroChartItem'-->
<xsd:complexType name="_AreaMicroChartItemType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:sequence>
<!--default aggregation 'points'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:AreaMicroChartPoint"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="points" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The set of points for this graphic element.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:AreaMicroChartPoint"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="color" type="n2:_ValueCSSColorType">
<xsd:annotation>
<xsd:documentation>The graphic element color.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The line title.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.AreaMicroChartLabel'-->
<xsd:complexType name="_AreaMicroChartLabelType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="color" type="n2:_ValueCSSColorType">
<xsd:annotation>
<xsd:documentation>The graphic element color.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="label" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The line title.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.AreaMicroChartPoint'-->
<xsd:complexType name="_AreaMicroChartPointType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="x" type="xsd:float">
<xsd:annotation>
<xsd:documentation>X value for the given point.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="y" type="xsd:float">
<xsd:annotation>
<xsd:documentation>Y value for the given point.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.BulletMicroChart'-->
<xsd:complexType name="_BulletMicroChartType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'actual'-->
<xsd:choice minOccurs="0">
<xsd:element ref="n3:BulletMicroChartData"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="actual" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Actual data of the BulletMicroChart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:BulletMicroChartData"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="thresholds" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Threshold data of the BulletMicroChart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:BulletMicroChartData"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="size" type="n2:_SizeType">
<xsd:annotation>
<xsd:documentation>The size of the microchart. If not set, the default size is applied based on the size of the device tile.
Responsive size takes width and height of the parent container where the bullet micro chart is included.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="mode" type="n3:_BulletMicroChartModeTypeType">
<xsd:annotation>
<xsd:documentation>The mode of displaying the actual value itself or the delta between the actual value and the target value. If not set, the actual value is displayed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="scale" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The scaling suffix that is added to all values.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="forecastValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The forecast value that is displayed in Actual  mode only. If set, the forecast value bar appears in the background of the actual value bar.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="targetValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The target value that is displayed as a black vertical bar.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="minValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The minimum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="maxValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The maximum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showActualValue" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, shows the numeric actual value. This property works in Actual mode only.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showDeltaValue" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, shows the calculated delta value instead of the numeric actual value regardless of the showActualValue setting. This property works in Delta mode only.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showActualValueInDeltaMode" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, shows the numeric actual value and possibly hides the delta value, if showDeltaValue is set to true.
This property works in Delta mode only and has priority over showDeltaValue.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showTargetValue" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, shows the numeric target value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showValueMarker" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, shows the value marker.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showThresholds" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, shows the threshold markers.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="actualValueLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>If set, displays a specified label instead of the numeric actual value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="deltaValueLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>If set, displays a specified label instead of the calculated numeric delta value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="targetValueLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>If set, displays a specified label instead of the numeric target value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The width of the chart. Overrides the width specified in the &lt;code&gt;size&lt;/code&gt; property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The height of the chart. Overrides the height specified in the &lt;code&gt;size&lt;/code&gt; property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="scaleColor" type="n3:_CommonBackgroundTypeType">
<xsd:annotation>
<xsd:documentation>The background color of the scale. The theming is enabled only for the default value of this property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="isResponsive" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="ariaLabelledBy" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Controls or IDs that label this control. Can be used by screen reader software.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is triggered when the chart is pressed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.BulletMicroChartData'-->
<xsd:complexType name="_BulletMicroChartDataType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="value" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The actual value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="color" type="n2:_ValueColorType">
<xsd:annotation>
<xsd:documentation>The semantic color of the actual value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.ColumnMicroChart'-->
<xsd:complexType name="_ColumnMicroChartType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'columns'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:ColumnMicroChartData"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="columns" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The column chart data.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:ColumnMicroChartData"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="leftTopLabel" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The label on the left top corner of the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:ColumnMicroChartLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="rightTopLabel" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The label on the right top corner of the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:ColumnMicroChartLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="leftBottomLabel" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The label on the left bottom corner of the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:ColumnMicroChartLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="rightBottomLabel" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The label on the right bottom corner of the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:ColumnMicroChartLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="size" type="n2:_SizeType">
<xsd:annotation>
<xsd:documentation>The size of the microchart. If not set, the default size is applied based on the size of the device tile.
Responsive size takes width and height of the parent container where the column micro chart is included.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The width of the chart. Overrides the width specified in the &lt;code&gt;size&lt;/code&gt; property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The height of the chart. Overrides the height specified in the &lt;code&gt;size&lt;/code&gt; property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="isResponsive" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size, width and height properties are ignored in this case.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showTopLabels" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If this property is set to &lt;code&gt;false&lt;/code&gt;, both top labels are hidden.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showBottomLabels" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If this property is set to &lt;code&gt;false&lt;/code&gt;, both bottom labels are hidden.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="allowColumnLabels" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true and there is enough space, top labels of the chart are hidden and labels for each column are shown instead.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="ariaLabelledBy" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Controls or IDs that label this control. Can be used by screen reader software.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is triggered when the chart is pressed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.ColumnMicroChartData'-->
<xsd:complexType name="_ColumnMicroChartDataType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="color" type="n2:_ValueCSSColorType">
<xsd:annotation>
<xsd:documentation>The graphic element color.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="label" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The line title.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="displayValue" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Overrides the value with a string that is shown when used in combination with
{@link sap.suite.ui.microchart.ColumnMicroChart} &lt;code&gt;allowColumnLabels&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="value" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The actual value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the column data.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.ColumnMicroChartLabel'-->
<xsd:complexType name="_ColumnMicroChartLabelType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="color" type="n2:_ValueCSSColorType">
<xsd:annotation>
<xsd:documentation>The graphic element color.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="label" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The line title.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.ComparisonMicroChart'-->
<xsd:complexType name="_ComparisonMicroChartType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'data'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:ComparisonMicroChartData"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="data" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The comparison chart bar data.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:ComparisonMicroChartData"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="size" type="n2:_SizeType">
<xsd:annotation>
<xsd:documentation>The size of the microchart. If not set, the default size is applied based on the size of the device tile.
Responsive size takes width and height of the parent container where the bullet micro chart is included.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="scale" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The scaling suffix that is added to the actual and target values.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="minValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The minimum scale value for the chart used to define the value range of the scale for comparing different values.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="maxValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The maximum scale value for the chart used to define the value range of the scale for comparing different values.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="view" type="n3:_ComparisonMicroChartViewTypeType">
<xsd:annotation>
<xsd:documentation>The view of the chart. If not set, the Normal view is used by default.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="colorPalette" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The color palette for the chart. If this property is set, semantic colors defined in ComparisonData are ignored. Colors from the palette are assigned to each bar consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="shrinkable" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If it is set to true, the height of the control is defined by its content.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The width of the chart. Overrides the width specified in the &lt;code&gt;size&lt;/code&gt; property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The height of the chart. Overrides the height specified in the &lt;code&gt;size&lt;/code&gt; property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="isResponsive" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="ariaLabelledBy" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Controls or IDs that label this control. Can be used by screen reader software.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is triggered when the chart is pressed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.ComparisonMicroChartData'-->
<xsd:complexType name="_ComparisonMicroChartDataType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="value" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The value for comparison.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="color" type="n2:_ValueCSSColorType">
<xsd:annotation>
<xsd:documentation>The semantic color of the value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The comparison bar title.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="displayValue" type="xsd:string">
<xsd:annotation>
<xsd:documentation>If this property is set then it will be displayed instead of value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the comparison chart bar.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.DeltaMicroChart'-->
<xsd:complexType name="_DeltaMicroChartType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:attribute name="value1" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The first value for delta calculation.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="value2" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The second value for delta calculation.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="title1" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The first value title.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="title2" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The second value title.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="displayValue1" type="xsd:string">
<xsd:annotation>
<xsd:documentation>If this property is set, it is rendered instead of value1.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="displayValue2" type="xsd:string">
<xsd:annotation>
<xsd:documentation>If this property is set, it is rendered instead of value2.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="deltaDisplayValue" type="xsd:string">
<xsd:annotation>
<xsd:documentation>If this property is set, it is rendered instead of a calculated delta.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="color" type="n2:_ValueCSSColorType">
<xsd:annotation>
<xsd:documentation>The semantic color of the delta value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="view" type="n3:_DeltaMicroChartViewTypeType">
<xsd:annotation>
<xsd:documentation>The view of the chart. If not set, the &lt;code&gt;Normal&lt;/code&gt; view is used by default.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The width of the chart. Overrides the width specified in the &lt;code&gt;size&lt;/code&gt; property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The height of the chart. Overrides the height specified in the &lt;code&gt;size&lt;/code&gt; property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="size" type="n2:_SizeType">
<xsd:annotation>
<xsd:documentation>The size of the microchart. If not set, the default size is applied based on the size of the device tile.
Responsive size takes width and height of the parent container where the delta micro chart is included.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="isResponsive" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="ariaLabelledBy" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Controls or IDs that label this control. Can be used by screen reader software.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is triggered when the chart is pressed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.HarveyBallMicroChart'-->
<xsd:complexType name="_HarveyBallMicroChartType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'items'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:HarveyBallMicroChartItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="items" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The set of items. Currently only a single item is supported.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:HarveyBallMicroChartItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="total" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The total value. The total value is represented by a full circle, or 360 degrees value on the chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="totalLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The total label. If specified, it is displayed instead of the total value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="totalScale" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The scaling factor that is displayed next to the total value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="formattedLabel" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;totalLabel&lt;/code&gt; property is used instead of the combination of
the total value and its scaling factor.
&lt;br&gt;The default value is &lt;code&gt;false&lt;/code&gt;, which means that the total value, defined by the &lt;code&gt;total&lt;/code&gt;
property, and the scaling factor, defined by the &lt;code&gt;totalScale&lt;/code&gt; property, are displayed separately.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showTotal" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to &lt;code&gt;true&lt;/code&gt;, the total value is displayed next to the chart. The default setting
is &lt;code&gt;true&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showFractions" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to &lt;code&gt;true&lt;/code&gt;, the fraction values are displayed next to the chart. The default setting is
&lt;code&gt;true&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="size" type="n2:_SizeType">
<xsd:annotation>
<xsd:documentation>The size of the chart. If not set, the default size is applied based on the device type.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="colorPalette" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The color palette for the chart. Currently only a single color (first color in the array) is supported.
&lt;br&gt;If this property is defined, the semantic color defined in the {@link sap.suite.ui.microchart.HarveyBallMicroChartItem}
is ignored.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The width of the chart. Overrides the width specified in the &lt;code&gt;size&lt;/code&gt; property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The height of the chart. Overrides the height specified in the &lt;code&gt;size&lt;/code&gt; property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="alignContent" type="n3:_HorizontalAlignmentTypeType">
<xsd:annotation>
<xsd:documentation>The alignment of the content. If not set, the &lt;code&gt;Left&lt;/code&gt; alignment type is used.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="isResponsive" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to &lt;code&gt;true&lt;/code&gt;, the width and height of the control are determined by the width and height
of the parent container, in which case the &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; properties are ignored.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="ariaLabelledBy" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Controls or IDs that label this control. Can be used by screen reader software.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when the chart is clicked or tapped.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.HarveyBallMicroChartItem'-->
<xsd:complexType name="_HarveyBallMicroChartItemType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="color" type="n2:_ValueCSSColorType">
<xsd:annotation>
<xsd:documentation>The color of the sector representing the fraction value.&lt;br&gt;The same color is used for the fraction
value label defined either by the &lt;code&gt;fraction&lt;/code&gt; property or by the &lt;code&gt;fractionLabel&lt;/code&gt;
property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="fraction" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The fraction value that defines the size of the colored sector.
&lt;br&gt;This property must be set to a value that is a fraction of the &lt;code&gt;total&lt;/code&gt;
value defined for the {@link sap.suite.ui.microchart.HarveyBallMicroChart}.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="fractionLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The fraction label. If this property is specified, it is displayed instead of the label that is
based on the &lt;code&gt;fraction&lt;/code&gt; property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="fractionScale" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The scaling factor that is displayed after the fraction value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="formattedLabel" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;fractionLabel&lt;/code&gt; property is used instead of the
combination of the fraction value and scaling factor.
&lt;br&gt;The default value is &lt;code&gt;false&lt;/code&gt;, which means that the fraction value, defined by
the &lt;code&gt;fraction&lt;/code&gt; property, and the scaling factor, defined by the &lt;code&gt;fractionScale&lt;/code&gt;
property are displayed separately.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.InteractiveBarChart'-->
<xsd:complexType name="_InteractiveBarChartType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'bars'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:InteractiveBarChartBar"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="bars" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Bars displayed on the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:InteractiveBarChartBar"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="displayedBars" type="xsd:int">
<xsd:annotation>
<xsd:documentation>The number of displayed bars.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="labelWidth" type="n0:_PercentageType">
<xsd:annotation>
<xsd:documentation>Width of the labels column in the resulting layout (in percentage). Possible range of values from 0 to 100.
A value of 40 results in the labels column taking up 40% of available space.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="selectionEnabled" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Enables the selection in the chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="min" type="xsd:float">
<xsd:annotation>
<xsd:documentation>Begin of displayed scale.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="max" type="xsd:float">
<xsd:annotation>
<xsd:documentation>End of displayed scale.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="ariaLabelledBy" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Association to controls which label this control (see WAI-ARIA attribute aria-labelledby).</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="selectionChanged" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Event is fired when user has selected or deselected a bar.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user presses the chart while its bars are not selectable in non-interactive mode. This is decided internally, depending on the size of the bars.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.InteractiveBarChartBar'-->
<xsd:complexType name="_InteractiveBarChartBarType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="label" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The label for the chart bar.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="selected" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines if the chart bar is selected.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="displayedValue" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The value label to be displayed on the bar in the chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="color" type="n2:_ValueColorType">
<xsd:annotation>
<xsd:documentation>Determines the color of the bar.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="value" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The numeric value of the chart bar to be displayed on the bar.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.InteractiveDonutChart'-->
<xsd:complexType name="_InteractiveDonutChartType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'segments'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:InteractiveDonutChartSegment"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="segments" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Aggregation which contains all segments.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:InteractiveDonutChartSegment"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="displayedSegments" type="xsd:int">
<xsd:annotation>
<xsd:documentation>Number of segments to be displayed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="selectionEnabled" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Switch which enables or disables selection.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="ariaLabelledBy" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Association to controls which label this control (see WAI-ARIA attribute aria-labelledby).</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="selectionChanged" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Event is fired when a user has selected or deselected a segment or a legend entry.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user presses the chart while its segments are not selectable in non-interactive mode. This is decided internally, depending on the size of the chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.InteractiveDonutChartSegment'-->
<xsd:complexType name="_InteractiveDonutChartSegmentType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="label" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Displayed text for the segment.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="selected" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Indicator for the selected state.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="value" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The value representing a percentage or an absolute value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="displayedValue" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The value that is directly displayed on the legend.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="color" type="n2:_ValueColorType">
<xsd:annotation>
<xsd:documentation>Determines the color of the segment.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.InteractiveLineChart'-->
<xsd:complexType name="_InteractiveLineChartType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'points'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:InteractiveLineChartPoint"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="points" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Points displayed in the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:InteractiveLineChartPoint"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="displayedPoints" type="xsd:int">
<xsd:annotation>
<xsd:documentation>The maximum number of points to be displayed on the chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="precedingPoint" type="xsd:float">
<xsd:annotation>
<xsd:documentation>Abstract invisible point outside of the chart that ensures that the graph flows smoothly into the visible part of the chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="succeedingPoint" type="xsd:float">
<xsd:annotation>
<xsd:documentation>Abstract invisible point outside of the chart that ensures that the graph flows smoothly out of the visible part of the chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="selectionEnabled" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If this property is set to true, one or multiple points are selectable.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="ariaLabelledBy" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Association to controls which label this control (see WAI-ARIA attribute aria-labelledby).</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="selectionChanged" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Event is fired when a user has selected or deselected a point.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired only in non-interactive mode when the user presses the chart; in this mode, the points and surrounding areas are not selectable. Non-interactive mode is decided upon internally, depending on the size of the areas surrounding the points.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.InteractiveLineChartPoint'-->
<xsd:complexType name="_InteractiveLineChartPointType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="label" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The bottom label for the chart point.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="secondaryLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The label that is displayed right below the &lt;code&gt;label&lt;/code&gt;..</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="selected" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines if the chart point is selected.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="value" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The numeric value of the chart point.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="displayedValue" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The value label to be displayed near the point in the chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="color" type="n2:_ValueColorType">
<xsd:annotation>
<xsd:documentation>Determines the color of the point.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.LineMicroChart'-->
<xsd:complexType name="_LineMicroChartType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'points'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:LineMicroChartPoint"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="points" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Aggregation that contains all data points that should be provided in an ordered way.
If both the &lt;code&gt;points&lt;/code&gt; and &lt;code&gt;lines&lt;/code&gt; aggregations are used, the chart
is rendered based on the &lt;code&gt;points&lt;/code&gt; aggregation, while the lines from the &lt;code&gt;lines&lt;/code&gt; aggregations are ignored.
&lt;br&gt;The &lt;code&gt;points&lt;/code&gt; aggregation can be used to ensure backward compatibility.
However in general, the &lt;code&gt;lines&lt;/code&gt; aggregation should be preferred.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:LineMicroChartPoint"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="lines" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Aggregation that containes lines with data points.
&lt;br&gt;This aggregation should be used instead of the &lt;code&gt;points&lt;/code&gt; aggregation.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:LineMicroChartLine"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="size" type="n2:_SizeType">
<xsd:annotation>
<xsd:documentation>The size of the chart. If not set, the default size is applied based on the type of the device.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="threshold" type="xsd:float">
<xsd:annotation>
<xsd:documentation>Determines the chart threshold which is used for vertical normalization.
If the threshold does not belong to the value range given by minYValue...maxYValue, the threshold is ignored.
By setting the threshold property's value to null, the threshold is disabled and excluded from range calculations.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showThresholdLine" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If this property is set to &lt;code&gt;false&lt;/code&gt;, the threshold line is hidden.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showThresholdValue" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If this property is set to &lt;code&gt;false&lt;/code&gt;, the threshold value is hidden.
&lt;br&gt;If this property is set to &lt;code&gt;true&lt;/code&gt;, the value will be shown only if the
&lt;code&gt;showThresholdLine&lt;/code&gt; property is also set to &lt;code&gt;true&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="thresholdDisplayValue" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Overrides the threshold value with a string that is shown instead.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="minXValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>If this property is set, it indicates the value the X-axis starts with.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="maxXValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>If this property is set, it indicates the value the X-axis ends with.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="minYValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>If this property is set, it indicates the value the Y-axis starts with.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="maxYValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>If this property is set, it indicates the value the Y-axis ends with.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="leftTopLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Describes the left top label of the chart.
The label color is determined by the color property of the first LineMicroChartPoint in the points aggregation.
The space for the label is not reserved if the label is not set.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="rightTopLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Describes the right top label of the chart.
The label color is determined by the color property of the last LineMicroChartPoint in the points aggregation.
The space for the label is not reserved if the label is not set.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="leftBottomLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Describes the left bottom label of the chart.
The label color is set internally.
The space for the label is not reserved if the label is not set.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="rightBottomLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Describes the right bottom label of the chart.
The label color is set automatically.
The space for the label is not reserved if the label is not set.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showTopLabels" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If this property is set to &lt;code&gt;false&lt;/code&gt;, both top labels are hidden.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showBottomLabels" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If this property is set to &lt;code&gt;false&lt;/code&gt;, both bottom labels are hidden.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="color" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Describes the color of the chart.
&lt;br&gt;In conjunction with emphasized points, it is only used if all points have the sap.m.ValueColor.Neutral color.
&lt;br&gt;The color can be set as an {@link sap.m.ValueCSSColor} or as a plain object. It has the 'above|' and 'below' properties that determine the color of the graph above and below the threshold, respectively.

&lt;br&gt;The &lt;code&gt;color&lt;/code&gt; property of {@link sap.suite.ui.microchart.LineMicroChartLine} has priority over this property in case it is set.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showPoints" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Defines if the control renders the points or not.
&lt;br&gt;If emphasized points are used, there is no effect.
&lt;br&gt;If the value is true, the points in the aggregation are shown.

&lt;br&gt;The &lt;code&gt;showPoints&lt;/code&gt; property of the {@link sap.suite.ui.microchart.LineMicroChartLine} control has priority over this property in case it is set.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The width of the chart. Overrides the width specified in the &lt;code&gt;size&lt;/code&gt; property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The height of the chart. Overrides the height specified in the &lt;code&gt;size&lt;/code&gt; property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="ariaLabelledBy" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Controls or IDs that label this control. Can be used by screen reader software.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is triggered when the chart is pressed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.LineMicroChartEmphasizedPoint'-->
<xsd:complexType name="_LineMicroChartEmphasizedPointType">
<xsd:complexContent>
<xsd:extension base="n3:_LineMicroChartPointType">
<xsd:attribute name="color" type="n2:_ValueCSSColorType">
<xsd:annotation>
<xsd:documentation>Determines the color of the emphasized point.
The property has an effect only if the 'show' property is true.
If at least one emphasized point has a color different from Neutral, the graph is grey; otherwise, the graph is blue.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="show" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the chart point should be displayed or not.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.LineMicroChartLine'-->
<xsd:complexType name="_LineMicroChartLineType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:sequence>
<!--default aggregation 'points'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:LineMicroChartPoint"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="points" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Aggregation that contains all data points that should be provided in an ordered way.

&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; Points can be bound without template/factory method.
&lt;br&gt;This approach is more efficient when many points are used, because no new objects will be created for them
and only their representation in the model will be kept. See the {@link https://ui5.sap.com/#/sample/sap.suite.ui.microchart.sample.LineMicroChartBinding/preview samples}.
&lt;br&gt;To use emphasized points, the &lt;code&gt;emphasized&lt;/code&gt; property has to be set in the model of the point and can be used together with the properties &lt;code&gt;show&lt;/code&gt; and &lt;code&gt;color&lt;/code&gt;, as shown in the sample.
When this binding method is used, the #getPoints method will always return an empty array.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:LineMicroChartPoint"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="color" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Defines the color of the chart.
&lt;br&gt;In conjunction with emphasized points, this property is only used if all points have the {@link sap.m.ValueColor.Neutral} color.
The color can be set as an {@link sap.m.ValueCSSColor} or as a plain object. It has the &lt;code&gt;above&lt;/code&gt; and &lt;code&gt;below&lt;/code&gt; properties that determine the color of the graph above and below the threshold, respectively.

&lt;br&gt;This property has priority over the property &lt;code&gt;color&lt;/code&gt; of {@link sap.suite.ui.microchart.LineMicroChart} in case it is set.
&lt;br&gt;If this property is not defined, the value of the &lt;code&gt;color&lt;/code&gt; property from the parent {@link sap.suite.ui.microchart.LineMicroChart} is used instead.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showPoints" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Defines whether the points are shown.
&lt;br&gt;If emphasized points are used, this property is ignored.
&lt;br&gt;If this property is set to &lt;code&gt;true&lt;/code&gt;, the points in the &lt;code&gt;points&lt;/code&gt; aggregation are shown.

&lt;br&gt;This property has priority over the property &lt;code&gt;showPoints&lt;/code&gt; of {@link sap.suite.ui.microchart.LineMicroChart} in case it is set.
&lt;br&gt;If this property is not defined, the &lt;code&gt;showPoints&lt;/code&gt; property of the {@link sap.suite.ui.microchart.LineMicroChart} is used instead.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="type" type="n3:_LineTypeType">
<xsd:annotation>
<xsd:documentation>Defines the type of the line.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.LineMicroChartPoint'-->
<xsd:complexType name="_LineMicroChartPointType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="x" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The point's horizontal position.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="y" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The point's vertical position.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.RadialMicroChart'-->
<xsd:complexType name="_RadialMicroChartType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:attribute name="total" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The total value. This is taken as 360 degrees value on the chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="fraction" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The fraction of the total value that is displayed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="percentage" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The percentage that is displayed.
When a percentage is set, properties total and fraction are not considered.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="valueColor" type="n2:_ValueCSSColorType">
<xsd:annotation>
<xsd:documentation>The color shown in the completed path.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="size" type="n2:_SizeType">
<xsd:annotation>
<xsd:documentation>The size of the chart. If it is not set, the Auto size is used.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The width of the chart. Overrides the width specified in the &lt;code&gt;size&lt;/code&gt; property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The height of the chart. Overrides the height specified in the &lt;code&gt;size&lt;/code&gt; property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="alignContent" type="n3:_HorizontalAlignmentTypeType">
<xsd:annotation>
<xsd:documentation>The alignment of the content. If it is not set, the &lt;code&gt;Left&lt;/code&gt; alignment type is used.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="ariaLabelledBy" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Controls or IDs that label this control. Can be used by screen reader software.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is triggered when the chart is pressed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.StackedBarMicroChart'-->
<xsd:complexType name="_StackedBarMicroChartType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'bars'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:StackedBarMicroChartBar"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="bars" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The stacked bar chart items.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:StackedBarMicroChartBar"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="size" type="n2:_SizeType">
<xsd:annotation>
<xsd:documentation>The size of the chart. If not set, the default size is applied based on the size of the device tile.
Responsive size takes width and height of the parent container where the stacked bar micro chart is included.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="maxValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The maximum value can be set to scale StackedBarMicroChartBar values to the same base.
If maxValue is smaller than the sum of all StackedMicroChartBar values, the maxValue is ignored. All values are shown as percentage values (same behavior as maxValue is not used).
If maxValue is equal or bigger than the sum of all StackedMicroChartBars, all values are scaled to the value of maxValue and the percentage mode is turned off. Absolute values are shown instead.
The difference between the sum and maxValue is shown as invisible bar, thus e.g. different StackedBarMicroChart instances can be compared.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="precision" type="xsd:int">
<xsd:annotation>
<xsd:documentation>The precision of the rounding for the calculated percentage values of the bars. It defines how many digits after the decimal point are displayed. The default is set to 1 digit.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The width of the chart. Overrides the width specified in the &lt;code&gt;size&lt;/code&gt; property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The height of the chart. Overrides the height specified in the &lt;code&gt;size&lt;/code&gt; property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showLabels" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Defines whether the bar labels should be rendered. If set to &lt;code&gt;true&lt;/code&gt;, the labels that were specified for each bar become visible.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="ariaLabelledBy" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Controls or IDs that label this control. Can be used by screen reader software.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the microchart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.microchart.StackedBarMicroChartBar'-->
<xsd:complexType name="_StackedBarMicroChartBarType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="value" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The value for stacked bar chart. It is used in order to determine the width of the bar</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="valueColor" type="n2:_ValueCSSColorType">
<xsd:annotation>
<xsd:documentation>The color of the bar.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="displayValue" type="xsd:string">
<xsd:annotation>
<xsd:documentation>If this property is set, then it will be displayed instead of value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<xsd:simpleType name="_AreaMicroChartViewTypeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Normal">
<xsd:annotation>
<xsd:documentation>The view with labels on the top and bottom.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Wide">
<xsd:annotation>
<xsd:documentation>The view with labels on the left and right.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_BulletMicroChartModeTypeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Actual">
<xsd:annotation>
<xsd:documentation>Displays the Actual value.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Delta">
<xsd:annotation>
<xsd:documentation>Displays delta between the Actual and Threshold values.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_CommonBackgroundTypeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Lightest">
<xsd:annotation>
<xsd:documentation>The lightest background color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="ExtraLight">
<xsd:annotation>
<xsd:documentation>Extra light background color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Light">
<xsd:annotation>
<xsd:documentation>Light background color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="MediumLight">
<xsd:annotation>
<xsd:documentation>Medium light background color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Medium">
<xsd:annotation>
<xsd:documentation>Medium background color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Dark">
<xsd:annotation>
<xsd:documentation>Dark background color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="ExtraDark">
<xsd:annotation>
<xsd:documentation>Extra dark background color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Darkest">
<xsd:annotation>
<xsd:documentation>The darkest background color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Transparent">
<xsd:annotation>
<xsd:documentation>The transparent background color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_ComparisonMicroChartViewTypeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Normal">
<xsd:annotation>
<xsd:documentation>Titles and values are displayed above the bars.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Wide">
<xsd:annotation>
<xsd:documentation>Titles and values are displayed in the same line with the bars.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Responsive">
<xsd:annotation>
<xsd:documentation>Behavior changes based on the current width of the chart.
&lt;code&gt;Normal&lt;/code&gt; view is used for charts up to 192px wide, and &lt;code&gt;Wide&lt;/code&gt; is used for wider charts.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_DeltaMicroChartViewTypeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Normal">
<xsd:annotation>
<xsd:documentation>Titles are displayed above the bars.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Wide">
<xsd:annotation>
<xsd:documentation>Titles are displayed in the same line with the bars.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Responsive">
<xsd:annotation>
<xsd:documentation>Behavior changes based on the current width of the chart.
&lt;code&gt;Normal&lt;/code&gt; view is used for charts up to 192px wide, and &lt;code&gt;Wide&lt;/code&gt; is used for wider charts.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_HorizontalAlignmentTypeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Left">
<xsd:annotation>
<xsd:documentation>Left alignment.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Center">
<xsd:annotation>
<xsd:documentation>Center alignment.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Right">
<xsd:annotation>
<xsd:documentation>Right alignment.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_LineTypeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Solid">
<xsd:annotation>
<xsd:documentation>Solid line.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Dashed">
<xsd:annotation>
<xsd:documentation>Dashed line.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Dotted">
<xsd:annotation>
<xsd:documentation>Dotted line.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:schema>
