<?xml version="1.0" encoding="UTF-8"?><xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="sap.ui.fl" xmlns:n1="sap.ui.unified" xmlns:n2="sap.m" xmlns:n3="sap.ui.fl" xmlns:n0="sap.ui.core">
<xsd:import namespace="sap.ui.unified"/>
<xsd:import namespace="sap.m"/>
<xsd:import namespace="sap.ui.core"/>
<xsd:element name="TransportDialog" type="n3:_TransportDialogType" substitutionGroup="n2:Dialog">
<xsd:annotation>
<xsd:documentation>The Transport Dialog Control can be used to implement a value help for selecting an ABAP package and transport request. It is not a generic utility, but part of the Variantmanament and therefore cannot be used in any other application.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="VariantManagement" type="n3:_VariantManagementType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>The &lt;code&gt;VariantManagement&lt;/code&gt; control can be used to manage variants.
       &lt;h3&gt;Usage&lt;/h3&gt;
       You can use this control in most controls that are enabled for &lt;i&gt;UI adaptation at runtime&lt;/i&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<!--type definition for UIElement 'sap.ui.fl.transport.TransportDialog'-->
<xsd:complexType name="_TransportDialogType">
<xsd:complexContent>
<xsd:extension base="n2:_DialogType">
<xsd:attribute name="pkg" type="xsd:string">
<xsd:annotation>
<xsd:documentation>An ABAP package that can be used as default for the ABAP package selection.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="transports" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The set of ABAP transport requests that can be selected by a user.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="lrepObject" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The LREP object for which as transport request has to be selected</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="hidePackage" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Flag indicating whether the selection of an ABAP package is to be hidden or not.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="ok" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event will be fired when the user clicks the OK button on the dialog.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="cancel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event will be fired when the user clicks the Cancel button on the dialog or Escape button on the keyboard.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.ui.fl.variants.VariantManagement'-->
<xsd:complexType name="_VariantManagementType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:attribute name="showExecuteOnSelection" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Indicates that Execute on Selection is visible in the Save Variant and the Manage Variants dialogs.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showSetAsDefault" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Indicates that set as default is visible in the Save Variant and the Manage Variants dialogs.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="manualVariantKey" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to&lt;code&gt;true&lt;/code&gt;, the key for a vendor variant will be added manually.&lt;br&gt;
&lt;b&gt;Node:&lt;/b&gt;This flag is only used internally in the app variant scenarios.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="inErrorState" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Indicates that the control is in error state. If set to &lt;code&gt;true&lt;/code&gt; error message will be displayed whenever the variant is
opened.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="editable" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Indicates that the control is in edit state. If set to &lt;code&gt;false&lt;/code&gt; the footer of the views list will be hidden.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="modelName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Determines the name of the model. The binding context will be defined by the current ID.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt; In a UI adaptation scenario, this property is not used at all because the model name is &lt;i&gt;$FlexVariants&lt;/i&gt;</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="updateVariantInURL" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines the intention of setting the current variant based on passed information.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt; The VariantManagement control does not react in any way to this property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="for" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Contains the controls, for which the variant management is responsible.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="save" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when the Save Variant dialog is closed with OK for a variant.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="manage" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when users apply changes to variants in the Manage Variants dialog.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="initialized" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when the model and context are set.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="select" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when a new variant is selected.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:schema>
