<?xml version="1.0" encoding="UTF-8"?><xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="sap.tnt" xmlns:n1="sap.ui.unified" xmlns:n2="sap.m" xmlns:n3="sap.tnt" xmlns:n0="sap.ui.core">
<xsd:import namespace="sap.ui.unified"/>
<xsd:import namespace="sap.m"/>
<xsd:import namespace="sap.ui.core"/>
<xsd:element name="InfoLabel" type="n3:_InfoLabelType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>The &lt;code&gt;InfoLabel&lt;/code&gt; is a small non-interactive control which contains text information and non-semantic color chosen from a list of predefined color schemes. It serves the purpose to attract the user attention to some piece of information (state, quantity, condition, etc.).

&lt;h3&gt;Overview&lt;/h3&gt;

The control visualizes text information without user interaction. The text inside the control is always in upper case. It can have smaller or larger side paddings which can be specified by the &lt;code&gt;renderMode&lt;/code&gt; property.
The  text-background color pair can be changed by setting a digit between 1 and 9 that corresponds to the 9 predefined color combinations of the &lt;code&gt;colorScheme&lt;/code&gt; property.
The control is designed to be vertically aligned with UI5 Input and Button control families.
When using &lt;code&gt;InfoLabel&lt;/code&gt; in non-editable &lt;code&gt;Forms&lt;/code&gt;, &lt;code&gt;Tables&lt;/code&gt;, etc., set &lt;code&gt;displayOnly=true&lt;/code&gt; for best visual results.

&lt;h3&gt;Usage Guidelines&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;If the text is longer than the width of the control, it doesn’t wrap. Instead, it’s represented as ellipsis. &lt;/li&gt;
&lt;li&gt;When truncated, the full text in the control is not visible. Therefore, it’s recommended to make more space for longer items to be fully displayed.&lt;/li&gt;
&lt;li&gt;Colors are not semantic and have no visual representation in sap_belize_hcb and sap_belize_hcw themes.&lt;/li&gt;
&lt;li&gt;The control shows plain text only, formatting is not visualized.&lt;/li&gt;
&lt;/ul&gt;</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="NavigationList" type="n3:_NavigationListType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>The NavigationList control is an interactive control, which provides a choice of
different items, ordered as a list.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="NavigationListItem" type="n3:_NavigationListItemType" substitutionGroup="n0:Item">
<xsd:annotation>
<xsd:documentation>The NavigationListItem control represents an action, which can be selected by the user.
It can provide sub items.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SideNavigation" type="n3:_SideNavigationType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>The SideNavigation control is a container, which consists of flexible and fixed parts on top of each other.
&lt;h4&gt;Responsive Behavior&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;The flexible part adapts its size to the fixed one.&lt;/li&gt;
&lt;li&gt;The flexible part has a scrollbar when the content is larger than the available space.&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;Note:&lt;/b&gt; In order for the SideNavigation to stretch properly, its parent layout control should only be the sap.tnt.ToolPage.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ToolHeader" type="n3:_ToolHeaderType" substitutionGroup="n2:OverflowToolbar">
<xsd:annotation>
<xsd:documentation>The ToolHeader control is a horizontal container that is most
commonly used to display buttons, labels, and other various input controls.
&lt;h3&gt;Overview&lt;/h3&gt;
The ToolHeader control is based on {@link sap.m.OverflowToolbar}. It contains clearly structured menus of commands that are available across the various apps within the same tool layout.
&lt;h3&gt;Usage&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;If an app implements side navigation in addition to the tool header menu, the menu icon must be the first item on the left-hand side of the tool header.&lt;/li&gt;
&lt;li&gt;The app menu and the side navigation must not have any dependencies and must work independently.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Fiori 3 theme specifics&lt;/h4&gt;
In Fiori 3 Default theme the ToolHeader is with dark design unlike most of the other controls. This defines the usage of limited controls inside it, which will result in good design combination.&lt;br/&gt;
The ToolHeader stylizes the contained controls with the Shell color parameters, to match the dark design requirement. However, that's not a dark theme.&lt;br/&gt;&lt;br/&gt;
Only the following controls are supported:
&lt;ul&gt;
&lt;li&gt;sap.m.Text&lt;/li&gt;
&lt;li&gt;sap.m.Title&lt;/li&gt;
&lt;li&gt;sap.m.ObjectStatus&lt;/li&gt;
&lt;li&gt;sap.ui.core.Icon&lt;/li&gt;
&lt;li&gt;sap.m.Button&lt;/li&gt;
&lt;li&gt;sap.m.MenuButton&lt;/li&gt;
&lt;li&gt;sap.m.Select&lt;/li&gt;
&lt;li&gt;sap.m.SearchField&lt;/li&gt;
&lt;li&gt;sap.m.IconTabHeader&lt;/li&gt;
&lt;/ul&gt;</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ToolHeaderUtilitySeparator" type="n3:_ToolHeaderUtilitySeparatorType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>The ToolHeaderUtilitySeparator control is used in the sap.tnt.ToolHeader control
to specify where the overflow button is placed.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ToolPage" type="n3:_ToolPageType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>The ToolPage is a layout control, used to create a basic tools app that has a header, side navigation and contents area.
&lt;h4&gt;Overview&lt;/h4&gt;
The control has three main areas - a header on top, navigation to the side and a content area that can hold any control. The header and side navigation use custom controls
- {@link sap.tnt.ToolHeader} and {@link sap.tnt.SideNavigation}.
&lt;h4&gt;Usage&lt;/h4&gt;
The main usage of the sap.tnt controls is for scenarios in the tooling or administration space.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<!--type definition for UIElement 'sap.tnt.InfoLabel'-->
<xsd:complexType name="_InfoLabelType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:attribute name="text" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Specifies the text inside the &lt;code&gt;InfoLabel&lt;/code&gt; control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="renderMode" type="n3:_RenderModeType">
<xsd:annotation>
<xsd:documentation>Specifies the type of the &lt;code&gt;InfoLabel&lt;/code&gt; paddings - loose or narrow.
&lt;b&gt;Note:&lt;/b&gt; By default the padding is loose. It is recommended to use narrow (smaller) paddings for numeric texts.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="colorScheme" type="xsd:int">
<xsd:annotation>
<xsd:documentation>Specifies the fill and text color of the control. Accepts a digit as a value.
You can choose from 9 predefined background and text color combinations.
The color schemes are non-semantic, you can select them according to your own preferences.
The default &lt;code&gt;colorScheme&lt;/code&gt; is 7.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>Specifies the width of the &lt;code&gt;InfoLabel&lt;/code&gt; control. By default, the &lt;code&gt;InfoLabel&lt;/code&gt; control has the width of the content. Set this property to restrict the width to a custom value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="displayOnly" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines if the &lt;code&gt;InfoLabel&lt;/code&gt; is in &lt;code&gt;displayOnly&lt;/code&gt; mode.
When set to &lt;code&gt;true&lt;/code&gt; the control size adjusts to fit other controls, for example non-editable &lt;code&gt;Forms&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="textDirection" type="n0:_TextDirectionType">
<xsd:annotation>
<xsd:documentation>Available options for the text direction are LTR and RTL. By default the control inherits the text direction from its parent control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.tnt.NavigationList'-->
<xsd:complexType name="_NavigationListType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'items'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:NavigationListItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="items" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The items displayed in the list.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:NavigationListItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>Specifies the width of the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="expanded" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Specifies if the control is in expanded or collapsed mode.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="selectedKey" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Specifies the currently selected key.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="ariaDescribedBy" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Association to controls / IDs, which describe this control (see WAI-ARIA attribute aria-describedby).</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="ariaLabelledBy" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Association to controls / IDs, which label this control (see WAI-ARIA attribute aria-labelledby).</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="selectedItem" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The currently selected &lt;code&gt;NavigationListItem&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="itemSelect" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fired when an item is selected.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.tnt.NavigationListItem'-->
<xsd:complexType name="_NavigationListItemType">
<xsd:complexContent>
<xsd:extension base="n0:_ItemType">
<xsd:sequence>
<!--default aggregation 'items'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:NavigationListItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="items" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The sub items.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:NavigationListItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="icon" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>Specifies the icon for the item.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="expanded" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Specifies if the item is expanded.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="hasExpander" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Specifies if the item has an expander.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="visible" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Specifies if the item should be shown.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="select" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fired when this item is selected.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.tnt.SideNavigation'-->
<xsd:complexType name="_SideNavigationType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'item'-->
<xsd:choice minOccurs="0">
<xsd:element ref="n3:NavigationList"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="item" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Defines the content inside the flexible part.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:NavigationList"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="fixedItem" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Defines the content inside the fixed part.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:NavigationList"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="footer" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Defines the content inside the footer.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:NavigationList"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="expanded" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Specifies if the control is expanded.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="selectedKey" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Specifies the currently selected key.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="selectedItem" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The selected &lt;code&gt;NavigationListItem&lt;/code&gt;.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="itemSelect" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fired when an item is selected.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.tnt.ToolHeader'-->
<xsd:complexType name="_ToolHeaderType">
<xsd:complexContent>
<xsd:extension base="n2:_OverflowToolbarType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.tnt.ToolHeaderUtilitySeparator'-->
<xsd:complexType name="_ToolHeaderUtilitySeparatorType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.tnt.ToolPage'-->
<xsd:complexType name="_ToolPageType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="header" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The control to appear in the header area.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:ToolHeader"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="sideContent" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The side menu of the layout.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:SideNavigation"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="mainContents" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The content section.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sideExpanded" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Indicates if the side area is expanded. Overrides the expanded property of the sideContent aggregation.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<xsd:simpleType name="_RenderModeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Narrow">
<xsd:annotation>
<xsd:documentation>When type of the content of &lt;code&gt;InfoLabel&lt;/code&gt; is numeric paddings are narrow</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Loose">
<xsd:annotation>
<xsd:documentation>When type of the content of &lt;code&gt;InfoLabel&lt;/code&gt; is text padding are loose</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:schema>
